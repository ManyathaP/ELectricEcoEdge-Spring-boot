{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\eclipse-workspace\\\\my-react-app E\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import './Dashboard.css';\n// import DropdownMenu from './DropdownMenu.js';\n// // import GoogleMap from './GoogleMap';\n// import Logo from '../assets/Frame 1 (1).png';\n\n// const Dashboard = ({ user }) => {\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders, feedbacks  } = user;\n\n//     const [menuOpen, setMenuOpen] = useState(false);\n//     const [userLocation, setUserLocation] = useState(null);\n//     const menuRef = useRef(null);\n\n//       const toggleMenu = () => {\n//        setMenuOpen(!menuOpen);\n//      };\n\n//      const handleMenuItemClick = (menuItem) => {\n//         if (menuItem === 'Dispose') {\n//             window.open('/dispose', '_blank');\n//         } else {\n//             // Handle other menu items if needed\n//         }\n//     };\n\n//      const handleClickOutside = (event) => {\n//          if (menuRef.current && !menuRef.current.contains(event.target)) {\n//             setMenuOpen(false);\n//          }\n//      };\n\n//     useEffect(() => {\n//               navigator.geolocation.getCurrentPosition(\n//                     (position) => {\n//                          const { latitude, longitude } = position.coords;\n//                          setUserLocation({ lat: latitude, lng: longitude });\n//                      },\n//                      (error) => {\n//                          console.error('Error getting user location:', error);\n//                      }\n//                 );\n\n//                 document.addEventListener('mousedown', handleClickOutside);\n//                         return () => {\n//                             document.removeEventListener('mousedown', handleClickOutside);\n//                          };\n//                      }, []);\n\n//     const getInitials = (name) => {\n//                 const nameArray = name.split(' ');\n//                  const initials = nameArray.map(part => part[0].toUpperCase()).join('');\n//                 return initials;\n//              };\n\n//              const renderRecentActivities = () => {\n//                 if (previousOrders && previousOrders.length > 0) {\n//                  return previousOrders.map((order, index) => (\n//                          <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\n//                      ));\n//                  } else {\n//                      return <li className=\"mb-2 text-white\">No previous orders</li>;\n//                  }\n\n//                 };\n\n//     return (\n//         <div className=\"min-h-screen flex flex-col\">\n//             <header className=\"flex justify-between items-center p-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\n//                 <div className=\"menu-icon\" onClick={toggleMenu} >\n//                     &#9776;\n//                 </div>\n//                 <div className=\"logo\">\n//                 <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\n//                 </div>\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\n//             </header>\n\n//                       <main className=\"flex-1 flex flex-col md:flex-row\">\n//                  <div className=\"flex-1 bg-black p-10 text-white\">\n//                      <div className=\"flex flex-col md:flex-row justify-between mb-10 space-y-6 md:space-y-0 md:space-x-6\">\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                              {profilePicture ? (\n//                                 <img src={profilePicture} alt={`${name}'s profile`} className=\"w-30 h-30 rounded-full mb-5 shadow-md\" />\n//                             ) : (\n//                                 <div className=\"w-30 h-30 rounded-full bg-blue-600 text-white flex items-center justify-center text-4xl font-bold mb-5\">\n//                                     {getInitials(name)}\n//                                 </div>\n//                             )}\n//                             <h1 className=\"text-2xl\">{`Hello, ${name}!`}</h1>\n//                         </section>\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                             <p className=\"text-lg\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\n//                         </section>\n//                     </div>\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\n//                         <h2 className=\"text-xl mb-4\">Pickup Scheduled</h2>\n//                         <div className=\"notification\">\n//                             {pickupScheduled ? (\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\n//                             ) : (\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\n//                             )}\n//                             {/* <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\n//                                 {userLocation && <GoogleMap center={userLocation} />}\n//                             </div> */}\n//                         </div>\n//                     </section>\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\n//                         <h2 className=\"text-xl mb-4\">Recent Activities</h2>\n//                         <ul className=\"list-none p-0 m-0\">\n//                             {recentActivities && recentActivities.length > 0 ? (\n//                                 recentActivities.map((activity, index) => (\n//                                     <li key={index} className=\"mb-2 hover:text-green-300 transition-colors\">{activity}</li>\n//                                 ))\n//                             ) : (\n//                                 renderRecentActivities()\n//                             )}\n//                         </ul>\n//                     </section>\n//                 </div>\n//                 <div className=\"flex-1 bg-white p-10\">\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg mb-6\">\n//                         <h2 className=\"text-xl mb-4\">User Feedback</h2>\n//                         <div className=\"feedback-content overflow-x-auto whitespace-nowrap flex space-x-6 py-4\">\n//                             {feedbacks && feedbacks.length > 0 ? (\n//                                 feedbacks.map((feedback, index) => (\n//                                     <div key={index} className=\"feedback-item bg-white shadow-lg rounded-lg p-4 flex-none w-64\">\n//                                         {feedback.profilePicture ? (\n//                                             <img src={feedback.profilePicture} alt={`${feedback.name}'s profile`} className=\"w-12 h-12 rounded-full mb-2\" />\n//                                         ) : (\n//                                             <div className=\"w-12 h-12 rounded-full bg-gray-300 text-gray-700 flex items-center justify-center text-xl font-bold mb-2\">\n//                                                 {getInitials(feedback.name)}\n//                                             </div>\n//                                         )}\n//                                         <p className=\"text-gray-800\">{feedback.text}</p>\n//                                         <div className=\"text-yellow-500\">\n//                                             {'â˜…'.repeat(feedback.rating)}{'â˜†'.repeat(5 - feedback.rating)}\n//                                         </div>\n//                                     </div>\n//                                 ))\n//                             ) : (\n//                                 <p className=\"text-gray-600\">No feedback available.</p>\n//                             )}\n//                         </div>\n//                     </section>\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg\">\n//                         <h2 className=\"text-xl mb-4\">Submit Feedback</h2>\n//                         <form>\n//                             <div className=\"mb-4\">\n//                                 <label htmlFor=\"rating\" className=\"block text-gray-700 mb-2\">Rating</label>\n//                                 <div className=\"flex space-x-1 text-yellow-500\">\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜†</span>\n//                                 </div>\n//                             </div>\n//                             <div className=\"mb-4\">\n//                                 <label htmlFor=\"feedback\" className=\"block text-gray-700 mb-2\">Feedback</label>\n//                                 <textarea id=\"feedback\" className=\"w-full p-2 border border-gray-300 rounded\" rows=\"4\"></textarea>\n//                             </div>\n//                             <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\">Submit</button>\n//                         </form>\n//                     </section>\n//                 </div>\n//             </main>\n//         </div>\n//     );\n// };\n\n// export default Dashboard;\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import './Dashboard.css';\n// import DropdownMenu from './DropdownMenu.js';\n// // import GoogleMap from './GoogleMap';\n// import Logo from '../assets/Frame 1 (1).png';\n\n// const Dashboard = ({ user }) => {\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders, feedbacks } = user;\n\n//     const [menuOpen, setMenuOpen] = useState(false);\n//     const menuRef = useRef(null);\n\n//     const toggleMenu = () => {\n//         setMenuOpen(!menuOpen);\n//     };\n\n//     const handleMenuItemClick = (menuItem) => {\n//         if (menuItem === 'Dispose') {\n//             window.open('/dispose', '_blank');\n//         } else {\n//             // Handle other menu items if needed\n//         }\n//     };\n\n//     const handleClickOutside = (event) => {\n//         if (menuRef.current && !menuRef.current.contains(event.target)) {\n//             setMenuOpen(false);\n//         }\n//     };\n\n//     useEffect(() => {\n\n//         document.addEventListener('mousedown', handleClickOutside);\n//         return () => {\n//             document.removeEventListener('mousedown', handleClickOutside);\n//         };\n//     }, []);\n\n//     const getInitials = (name) => {\n//         const nameArray = name.split(' ');\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\n//         return initials;\n//     };\n\n//     const renderRecentActivities = () => {\n//         if (previousOrders && previousOrders.length > 0) {\n//             return previousOrders.map((order, index) => (\n//                 <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\n//             ));\n//         } else {\n//             return <li className=\"mb-2 text-white\">No previous orders</li>;\n//         }\n//     };\n\n//     return (\n//         <div className=\"min-h-screen flex flex-col\">\n//             <header className=\"flex justify-between items-center p-4 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\n//                 <div className=\"menu-icon cursor-pointer\" onClick={toggleMenu} >\n//                     &#9776;\n//                 </div>\n//                 <div className=\"logo\">\n//                     <img src={Logo} alt=\"Logo\" className=\"w-16 h-auto\" />\n//                 </div>\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\n//             </header>\n//             <main className=\"flex-1 flex flex-col md:flex-row p-4\">\n//                 <div className=\"flex-1 bg-black p-6 text-white rounded-lg shadow-lg\">\n//                     <div className=\"flex flex-col md:flex-row justify-between mb-6 space-y-4 md:space-y-0 md:space-x-4\">\n//                         <section className=\"bg-gray-800 p-4 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                             {profilePicture ? (\n//                                 <img src={profilePicture} alt={`${name}'s profile`} className=\"w-24 h-24 rounded-full mb-4 shadow-md\" />\n//                             ) : (\n//                                 <div className=\"w-24 h-24 rounded-full bg-blue-600 text-white flex items-center justify-center text-3xl font-bold mb-4\">\n//                                     {getInitials(name)}\n//                                 </div>\n//                             )}\n//                             <h1 className=\"text-xl\">{`Hello, ${name}!`}</h1>\n//                         </section>\n//                         <section className=\"bg-gray-800 p-4 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                             <p className=\"text-md\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\n//                         </section>\n//                     </div>\n//                     <section className=\"bg-blue-600 p-4 rounded-lg shadow-lg mb-4 transition-transform transform hover:scale-105\">\n//                         <h2 className=\"text-lg mb-2\">Pickup Scheduled</h2>\n//                         <div className=\"notification\">\n//                             {pickupScheduled ? (\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\n//                             ) : (\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\n//                             )}\n//                             {/* <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\n//                                 {userLocation && <GoogleMap center={userLocation} />}\n//                             </div> */}\n//                         </div>\n//                     </section>\n//                     <section className=\"bg-blue-600 p-4 rounded-lg shadow-lg mb-4 transition-transform transform hover:scale-105\">\n//                         <h2 className=\"text-lg mb-2\">Recent Activities</h2>\n//                         <ul className=\"list-none p-0 m-0\">\n//                             {recentActivities && recentActivities.length > 0 ? (\n//                                 recentActivities.map((activity, index) => (\n//                                     <li key={index} className=\"mb-2 hover:text-green-300 transition-colors\">{activity}</li>\n//                                 ))\n//                             ) : (\n//                                 renderRecentActivities()\n//                             )}\n//                         </ul>\n//                     </section>\n//                 </div>\n//                 <div className=\"flex-1 bg-white p-6 rounded-lg shadow-lg\">\n//                     <section className=\"bg-gray-100 p-4 rounded-lg shadow-lg mb-4\">\n//                         <h2 className=\"text-lg mb-2\">User Feedback</h2>\n//                         <div className=\"feedback-content overflow-x-auto whitespace-nowrap flex space-x-4 py-2\">\n//                             {feedbacks && feedbacks.length > 0 ? (\n//                                 feedbacks.map((feedback, index) => (\n//                                     <div key={index} className=\"feedback-item bg-white shadow-lg rounded-lg p-4 flex-none w-56\">\n//                                         {feedback.profilePicture ? (\n//                                             <img src={feedback.profilePicture} alt={`${feedback.name}'s profile`} className=\"w-10 h-10 rounded-full mb-2\" />\n//                                         ) : (\n//                                             <div className=\"w-10 h-10 rounded-full bg-gray-300 text-gray-700 flex items-center justify-center text-lg font-bold mb-2\">\n//                                                 {getInitials(feedback.name)}\n//                                             </div>\n//                                         )}\n//                                         <p className=\"text-gray-800\">{feedback.text}</p>\n//                                         <div className=\"text-yellow-500\">\n//                                             {'â˜…'.repeat(feedback.rating)}{'â˜†'.repeat(5 - feedback.rating)}\n//                                         </div>\n//                                     </div>\n//                                 ))\n//                             ) : (\n//                                 <p className=\"text-gray-600\">No feedback available.</p>\n//                             )}\n//                         </div>\n//                     </section>\n//                     <section className=\"bg-gray-100 p-4 rounded-lg shadow-lg\">\n//                         <h2 className=\"text-lg mb-2\">Submit Feedback</h2>\n//                         <form>\n//                             <div className=\"mb-4\">\n//                                 <label htmlFor=\"rating\" className=\"block text-gray-700 mb-2\">Rating</label>\n//                                 <div className=\"flex space-x-1 text-yellow-500\">\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜†</span>\n//                                 </div>\n//                             </div>\n//                             <div className=\"mb-4\">\n//                                 <label htmlFor=\"feedback\" className=\"block text-gray-700 mb-2\">Feedback</label>\n//                                 <textarea id=\"feedback\" className=\"w-full p-2 border border-gray-300 rounded\" rows=\"4\"></textarea>\n//                             </div>\n//                             <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\">Submit</button>\n//                         </form>\n//                     </section>\n//                 </div>\n//             </main>\n//         </div>\n//     );\n// };\n\n// export default Dashboard;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Dashboard.css';\nimport DropdownMenu from './DropdownMenu';\nimport Logo from '../assets/Frame 1 (1).png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user\n}) => {\n  _s();\n  const {\n    name,\n    rewards,\n    pickupScheduled,\n    pickupDate,\n    profilePicture,\n    feedbacks\n  } = user;\n  const [menuOpen, setMenuOpen] = useState(false);\n  const menuRef = useRef(null);\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n  const handleMenuItemClick = () => {\n    setMenuOpen(false);\n  };\n  const handleClickOutside = event => {\n    if (menuRef.current && !menuRef.current.contains(event.target)) {\n      setMenuOpen(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const getInitials = name => {\n    const nameArray = name.split(' ');\n    const initials = nameArray.map(part => part[0].toUpperCase()).join('');\n    return initials;\n  };\n\n  // const renderRecentActivities = () => {\n  //     if (previousOrders && previousOrders.length > 0) {\n  //         return previousOrders.map((order, index) => (\n  //             <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\n  //         ));\n  //     } else {\n  //         return <li className=\"mb-2 text-white\">No previous orders</li>;\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"logosl  p-4 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-icon cursor-pointer\",\n        onClick: toggleMenu,\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logosl\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"Logo\",\n          className: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: menuRef,\n        children: /*#__PURE__*/_jsxDEV(DropdownMenu, {\n          isOpen: menuOpen,\n          onMenuItemClick: handleMenuItemClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 flex flex-col md:flex-row p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 bg-black p-6 text-white rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col md:flex-row justify-between mb-6 space-y-4 md:space-y-0 md:space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\",\n            children: [profilePicture ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: profilePicture,\n              alt: `${name}'s profile`,\n              className: \"w-24 h-24 rounded-full mb-4 shadow-md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-24 h-24 rounded-full bg-blue-600 text-white flex items-center justify-center text-3xl font-bold mb-4\",\n              children: getInitials(name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-xl\",\n              children: `Hello, ${name}!`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"bg-gray-800 p-4 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-md\",\n              children: [\"Rewards Earned: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-yellow-400\",\n                children: rewards\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 68\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"bg-blue-600 p-4 rounded-lg shadow-lg mb-4 transition-transform transform hover:scale-105\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg mb-2\",\n            children: \"Pickup Scheduled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification\",\n            children: pickupScheduled ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon mr-2\",\n                children: \"\\uD83D\\uDCC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 66\n              }, this), \" You have a pickup scheduled on \", pickupDate, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon mr-2\",\n                children: \"\\uD83D\\uDCC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 66\n              }, this), \" No pickup scheduled.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 bg-white p-6 rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"bg-gray-100 p-4 rounded-lg shadow-lg mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg mb-2\",\n            children: \"User Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-content overflow-x-auto whitespace-nowrap flex space-x-4 py-2\",\n            children: feedbacks && feedbacks.length > 0 ? feedbacks.map((feedback, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-item bg-white shadow-lg rounded-lg p-4 flex-none w-56\",\n              children: [feedback.profilePicture ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: feedback.profilePicture,\n                alt: `${feedback.name}'s profile`,\n                className: \"w-10 h-10 rounded-full mb-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-10 h-10 rounded-full bg-gray-300 text-gray-700 flex items-center justify-center text-lg font-bold mb-2\",\n                children: getInitials(feedback.name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-800\",\n                children: feedback.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-yellow-500\",\n                children: ['â˜…'.repeat(feedback.rating), 'â˜†'.repeat(5 - feedback.rating)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"No feedback available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"bg-gray-100 p-4 rounded-lg shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg mb-2\",\n            children: \"Submit Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"rating\",\n                className: \"block text-gray-700 mb-2\",\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex space-x-1 text-yellow-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cursor-pointer\",\n                  children: \"\\u2605\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cursor-pointer\",\n                  children: \"\\u2605\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cursor-pointer\",\n                  children: \"\\u2605\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cursor-pointer\",\n                  children: \"\\u2605\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cursor-pointer\",\n                  children: \"\\u2606\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"feedback\",\n                className: \"block text-gray-700 mb-2\",\n                children: \"Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"feedback\",\n                className: \"w-full p-2 border border-gray-300 rounded\",\n                rows: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"m+Bw3p56aCldBbEoFNtGoL2OdKs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","DropdownMenu","Logo","jsxDEV","_jsxDEV","Dashboard","user","_s","name","rewards","pickupScheduled","pickupDate","profilePicture","feedbacks","menuOpen","setMenuOpen","menuRef","toggleMenu","handleMenuItemClick","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","getInitials","nameArray","split","initials","map","part","toUpperCase","join","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","ref","isOpen","onMenuItemClick","length","feedback","index","text","repeat","rating","htmlFor","id","rows","type","_c","$RefreshReg$"],"sources":["C:/Users/HP/eclipse-workspace/my-react-app E/src/components/Dashboard.js"],"sourcesContent":["\r\n\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import './Dashboard.css';\r\n// import DropdownMenu from './DropdownMenu.js';\r\n// // import GoogleMap from './GoogleMap';\r\n// import Logo from '../assets/Frame 1 (1).png';\r\n\r\n// const Dashboard = ({ user }) => {\r\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders, feedbacks  } = user;\r\n\r\n//     const [menuOpen, setMenuOpen] = useState(false);\r\n//     const [userLocation, setUserLocation] = useState(null);\r\n//     const menuRef = useRef(null);\r\n\r\n//       const toggleMenu = () => {\r\n//        setMenuOpen(!menuOpen);\r\n//      };\r\n\r\n//      const handleMenuItemClick = (menuItem) => {\r\n//         if (menuItem === 'Dispose') {\r\n//             window.open('/dispose', '_blank');\r\n//         } else {\r\n//             // Handle other menu items if needed\r\n//         }\r\n//     };\r\n\r\n//      const handleClickOutside = (event) => {\r\n//          if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n//             setMenuOpen(false);\r\n//          }\r\n//      };\r\n\r\n\r\n//     useEffect(() => {\r\n//               navigator.geolocation.getCurrentPosition(\r\n//                     (position) => {\r\n//                          const { latitude, longitude } = position.coords;\r\n//                          setUserLocation({ lat: latitude, lng: longitude });\r\n//                      },\r\n//                      (error) => {\r\n//                          console.error('Error getting user location:', error);\r\n//                      }\r\n//                 );\r\n    \r\n//                 document.addEventListener('mousedown', handleClickOutside);\r\n//                         return () => {\r\n//                             document.removeEventListener('mousedown', handleClickOutside);\r\n//                          };\r\n//                      }, []);\r\n\r\n    \r\n\r\n\r\n//     const getInitials = (name) => {\r\n//                 const nameArray = name.split(' ');\r\n//                  const initials = nameArray.map(part => part[0].toUpperCase()).join('');\r\n//                 return initials;\r\n//              };\r\n        \r\n//              const renderRecentActivities = () => {\r\n//                 if (previousOrders && previousOrders.length > 0) {\r\n//                  return previousOrders.map((order, index) => (\r\n//                          <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\r\n//                      ));\r\n//                  } else {\r\n//                      return <li className=\"mb-2 text-white\">No previous orders</li>;\r\n//                  }\r\n    \r\n//                 };\r\n\r\n\r\n//     return (\r\n//         <div className=\"min-h-screen flex flex-col\">\r\n//             <header className=\"flex justify-between items-center p-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\r\n//                 <div className=\"menu-icon\" onClick={toggleMenu} >\r\n//                     &#9776;\r\n//                 </div>\r\n//                 <div className=\"logo\">\r\n//                 <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\r\n//                 </div>\r\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\r\n//             </header>\r\n\r\n//                       <main className=\"flex-1 flex flex-col md:flex-row\">\r\n//                  <div className=\"flex-1 bg-black p-10 text-white\">\r\n//                      <div className=\"flex flex-col md:flex-row justify-between mb-10 space-y-6 md:space-y-0 md:space-x-6\">\r\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                              {profilePicture ? (\r\n//                                 <img src={profilePicture} alt={`${name}'s profile`} className=\"w-30 h-30 rounded-full mb-5 shadow-md\" />\r\n//                             ) : (\r\n//                                 <div className=\"w-30 h-30 rounded-full bg-blue-600 text-white flex items-center justify-center text-4xl font-bold mb-5\">\r\n//                                     {getInitials(name)}\r\n//                                 </div>\r\n//                             )}\r\n//                             <h1 className=\"text-2xl\">{`Hello, ${name}!`}</h1>\r\n//                         </section>\r\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                             <p className=\"text-lg\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\r\n//                         </section>\r\n//                     </div>\r\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\r\n//                         <h2 className=\"text-xl mb-4\">Pickup Scheduled</h2>\r\n//                         <div className=\"notification\">\r\n//                             {pickupScheduled ? (\r\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\r\n//                             ) : (\r\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\r\n//                             )}\r\n//                             {/* <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\r\n//                                 {userLocation && <GoogleMap center={userLocation} />}\r\n//                             </div> */}\r\n//                         </div>\r\n//                     </section>\r\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\r\n//                         <h2 className=\"text-xl mb-4\">Recent Activities</h2>\r\n//                         <ul className=\"list-none p-0 m-0\">\r\n//                             {recentActivities && recentActivities.length > 0 ? (\r\n//                                 recentActivities.map((activity, index) => (\r\n//                                     <li key={index} className=\"mb-2 hover:text-green-300 transition-colors\">{activity}</li>\r\n//                                 ))\r\n//                             ) : (\r\n//                                 renderRecentActivities()\r\n//                             )}\r\n//                         </ul>\r\n//                     </section>\r\n//                 </div>\r\n//                 <div className=\"flex-1 bg-white p-10\">\r\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg mb-6\">\r\n//                         <h2 className=\"text-xl mb-4\">User Feedback</h2>\r\n//                         <div className=\"feedback-content overflow-x-auto whitespace-nowrap flex space-x-6 py-4\">\r\n//                             {feedbacks && feedbacks.length > 0 ? (\r\n//                                 feedbacks.map((feedback, index) => (\r\n//                                     <div key={index} className=\"feedback-item bg-white shadow-lg rounded-lg p-4 flex-none w-64\">\r\n//                                         {feedback.profilePicture ? (\r\n//                                             <img src={feedback.profilePicture} alt={`${feedback.name}'s profile`} className=\"w-12 h-12 rounded-full mb-2\" />\r\n//                                         ) : (\r\n//                                             <div className=\"w-12 h-12 rounded-full bg-gray-300 text-gray-700 flex items-center justify-center text-xl font-bold mb-2\">\r\n//                                                 {getInitials(feedback.name)}\r\n//                                             </div>\r\n//                                         )}\r\n//                                         <p className=\"text-gray-800\">{feedback.text}</p>\r\n//                                         <div className=\"text-yellow-500\">\r\n//                                             {'â˜…'.repeat(feedback.rating)}{'â˜†'.repeat(5 - feedback.rating)}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 ))\r\n//                             ) : (\r\n//                                 <p className=\"text-gray-600\">No feedback available.</p>\r\n//                             )}\r\n//                         </div>\r\n//                     </section>\r\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg\">\r\n//                         <h2 className=\"text-xl mb-4\">Submit Feedback</h2>\r\n//                         <form>\r\n//                             <div className=\"mb-4\">\r\n//                                 <label htmlFor=\"rating\" className=\"block text-gray-700 mb-2\">Rating</label>\r\n//                                 <div className=\"flex space-x-1 text-yellow-500\">\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜†</span>\r\n//                                 </div>\r\n//                             </div>\r\n//                             <div className=\"mb-4\">\r\n//                                 <label htmlFor=\"feedback\" className=\"block text-gray-700 mb-2\">Feedback</label>\r\n//                                 <textarea id=\"feedback\" className=\"w-full p-2 border border-gray-300 rounded\" rows=\"4\"></textarea>\r\n//                             </div>\r\n//                             <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\">Submit</button>\r\n//                         </form>\r\n//                     </section>\r\n//                 </div>\r\n//             </main>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import './Dashboard.css';\r\n// import DropdownMenu from './DropdownMenu.js';\r\n// // import GoogleMap from './GoogleMap';\r\n// import Logo from '../assets/Frame 1 (1).png';\r\n\r\n// const Dashboard = ({ user }) => {\r\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders, feedbacks } = user;\r\n\r\n//     const [menuOpen, setMenuOpen] = useState(false);\r\n//     const menuRef = useRef(null);\r\n\r\n//     const toggleMenu = () => {\r\n//         setMenuOpen(!menuOpen);\r\n//     };\r\n\r\n//     const handleMenuItemClick = (menuItem) => {\r\n//         if (menuItem === 'Dispose') {\r\n//             window.open('/dispose', '_blank');\r\n//         } else {\r\n//             // Handle other menu items if needed\r\n//         }\r\n//     };\r\n\r\n//     const handleClickOutside = (event) => {\r\n//         if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n//             setMenuOpen(false);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n\r\n//         document.addEventListener('mousedown', handleClickOutside);\r\n//         return () => {\r\n//             document.removeEventListener('mousedown', handleClickOutside);\r\n//         };\r\n//     }, []);\r\n\r\n//     const getInitials = (name) => {\r\n//         const nameArray = name.split(' ');\r\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\r\n//         return initials;\r\n//     };\r\n\r\n//     const renderRecentActivities = () => {\r\n//         if (previousOrders && previousOrders.length > 0) {\r\n//             return previousOrders.map((order, index) => (\r\n//                 <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\r\n//             ));\r\n//         } else {\r\n//             return <li className=\"mb-2 text-white\">No previous orders</li>;\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"min-h-screen flex flex-col\">\r\n//             <header className=\"flex justify-between items-center p-4 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\r\n//                 <div className=\"menu-icon cursor-pointer\" onClick={toggleMenu} >\r\n//                     &#9776;\r\n//                 </div>\r\n//                 <div className=\"logo\">\r\n//                     <img src={Logo} alt=\"Logo\" className=\"w-16 h-auto\" />\r\n//                 </div>\r\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\r\n//             </header>\r\n//             <main className=\"flex-1 flex flex-col md:flex-row p-4\">\r\n//                 <div className=\"flex-1 bg-black p-6 text-white rounded-lg shadow-lg\">\r\n//                     <div className=\"flex flex-col md:flex-row justify-between mb-6 space-y-4 md:space-y-0 md:space-x-4\">\r\n//                         <section className=\"bg-gray-800 p-4 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                             {profilePicture ? (\r\n//                                 <img src={profilePicture} alt={`${name}'s profile`} className=\"w-24 h-24 rounded-full mb-4 shadow-md\" />\r\n//                             ) : (\r\n//                                 <div className=\"w-24 h-24 rounded-full bg-blue-600 text-white flex items-center justify-center text-3xl font-bold mb-4\">\r\n//                                     {getInitials(name)}\r\n//                                 </div>\r\n//                             )}\r\n//                             <h1 className=\"text-xl\">{`Hello, ${name}!`}</h1>\r\n//                         </section>\r\n//                         <section className=\"bg-gray-800 p-4 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                             <p className=\"text-md\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\r\n//                         </section>\r\n//                     </div>\r\n//                     <section className=\"bg-blue-600 p-4 rounded-lg shadow-lg mb-4 transition-transform transform hover:scale-105\">\r\n//                         <h2 className=\"text-lg mb-2\">Pickup Scheduled</h2>\r\n//                         <div className=\"notification\">\r\n//                             {pickupScheduled ? (\r\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\r\n//                             ) : (\r\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\r\n//                             )}\r\n//                             {/* <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\r\n//                                 {userLocation && <GoogleMap center={userLocation} />}\r\n//                             </div> */}\r\n//                         </div>\r\n//                     </section>\r\n//                     <section className=\"bg-blue-600 p-4 rounded-lg shadow-lg mb-4 transition-transform transform hover:scale-105\">\r\n//                         <h2 className=\"text-lg mb-2\">Recent Activities</h2>\r\n//                         <ul className=\"list-none p-0 m-0\">\r\n//                             {recentActivities && recentActivities.length > 0 ? (\r\n//                                 recentActivities.map((activity, index) => (\r\n//                                     <li key={index} className=\"mb-2 hover:text-green-300 transition-colors\">{activity}</li>\r\n//                                 ))\r\n//                             ) : (\r\n//                                 renderRecentActivities()\r\n//                             )}\r\n//                         </ul>\r\n//                     </section>\r\n//                 </div>\r\n//                 <div className=\"flex-1 bg-white p-6 rounded-lg shadow-lg\">\r\n//                     <section className=\"bg-gray-100 p-4 rounded-lg shadow-lg mb-4\">\r\n//                         <h2 className=\"text-lg mb-2\">User Feedback</h2>\r\n//                         <div className=\"feedback-content overflow-x-auto whitespace-nowrap flex space-x-4 py-2\">\r\n//                             {feedbacks && feedbacks.length > 0 ? (\r\n//                                 feedbacks.map((feedback, index) => (\r\n//                                     <div key={index} className=\"feedback-item bg-white shadow-lg rounded-lg p-4 flex-none w-56\">\r\n//                                         {feedback.profilePicture ? (\r\n//                                             <img src={feedback.profilePicture} alt={`${feedback.name}'s profile`} className=\"w-10 h-10 rounded-full mb-2\" />\r\n//                                         ) : (\r\n//                                             <div className=\"w-10 h-10 rounded-full bg-gray-300 text-gray-700 flex items-center justify-center text-lg font-bold mb-2\">\r\n//                                                 {getInitials(feedback.name)}\r\n//                                             </div>\r\n//                                         )}\r\n//                                         <p className=\"text-gray-800\">{feedback.text}</p>\r\n//                                         <div className=\"text-yellow-500\">\r\n//                                             {'â˜…'.repeat(feedback.rating)}{'â˜†'.repeat(5 - feedback.rating)}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 ))\r\n//                             ) : (\r\n//                                 <p className=\"text-gray-600\">No feedback available.</p>\r\n//                             )}\r\n//                         </div>\r\n//                     </section>\r\n//                     <section className=\"bg-gray-100 p-4 rounded-lg shadow-lg\">\r\n//                         <h2 className=\"text-lg mb-2\">Submit Feedback</h2>\r\n//                         <form>\r\n//                             <div className=\"mb-4\">\r\n//                                 <label htmlFor=\"rating\" className=\"block text-gray-700 mb-2\">Rating</label>\r\n//                                 <div className=\"flex space-x-1 text-yellow-500\">\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜†</span>\r\n//                                 </div>\r\n//                             </div>\r\n//                             <div className=\"mb-4\">\r\n//                                 <label htmlFor=\"feedback\" className=\"block text-gray-700 mb-2\">Feedback</label>\r\n//                                 <textarea id=\"feedback\" className=\"w-full p-2 border border-gray-300 rounded\" rows=\"4\"></textarea>\r\n//                             </div>\r\n//                             <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\">Submit</button>\r\n//                         </form>\r\n//                     </section>\r\n//                 </div>\r\n//             </main>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './Dashboard.css';\r\nimport DropdownMenu from './DropdownMenu';\r\nimport Logo from '../assets/Frame 1 (1).png';\r\n\r\nconst Dashboard = ({ user }) => {\r\n    const { name, rewards, pickupScheduled, pickupDate, profilePicture, feedbacks } = user;\r\n\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const menuRef = useRef(null);\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpen(!menuOpen);\r\n    };\r\n\r\n    const handleMenuItemClick = () => {\r\n        setMenuOpen(false);\r\n    };\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n            setMenuOpen(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const getInitials = (name) => {\r\n        const nameArray = name.split(' ');\r\n        const initials = nameArray.map(part => part[0].toUpperCase()).join('');\r\n        return initials;\r\n    };\r\n\r\n    // const renderRecentActivities = () => {\r\n    //     if (previousOrders && previousOrders.length > 0) {\r\n    //         return previousOrders.map((order, index) => (\r\n    //             <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\r\n    //         ));\r\n    //     } else {\r\n    //         return <li className=\"mb-2 text-white\">No previous orders</li>;\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex flex-col\">\r\n            <header className=\"logosl  p-4 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\r\n                <div className=\"menu-icon cursor-pointer\" onClick={toggleMenu} >\r\n                    &#9776;\r\n                </div>\r\n                <div className=\"logosl\">\r\n                    <img src={Logo} alt=\"Logo\" className=\"\" />\r\n                </div>\r\n                <div ref={menuRef}>\r\n                    <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\r\n                </div>\r\n            </header>\r\n            <main className=\"flex-1 flex flex-col md:flex-row p-4\">\r\n                <div className=\"flex-1 bg-black p-6 text-white rounded-lg shadow-lg\">\r\n                    <div className=\"flex flex-col md:flex-row justify-between mb-6 space-y-4 md:space-y-0 md:space-x-4\">\r\n                        <section className=\"bg-gray-800 p-4 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n                            {profilePicture ? (\r\n                                <img src={profilePicture} alt={`${name}'s profile`} className=\"w-24 h-24 rounded-full mb-4 shadow-md\" />\r\n                            ) : (\r\n                                <div className=\"w-24 h-24 rounded-full bg-blue-600 text-white flex items-center justify-center text-3xl font-bold mb-4\">\r\n                                    {getInitials(name)}\r\n                                </div>\r\n                            )}\r\n                            <h1 className=\"text-xl\">{`Hello, ${name}!`}</h1>\r\n                        </section>\r\n                        <section className=\"bg-gray-800 p-4 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n                            <p className=\"text-md\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\r\n                        </section>\r\n                    </div>\r\n                    <section className=\"bg-blue-600 p-4 rounded-lg shadow-lg mb-4 transition-transform transform hover:scale-105\">\r\n                        <h2 className=\"text-lg mb-2\">Pickup Scheduled</h2>\r\n                        <div className=\"notification\">\r\n                            {pickupScheduled ? (\r\n                                <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\r\n                            ) : (\r\n                                <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\r\n                            )}\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n                <div className=\"flex-1 bg-white p-6 rounded-lg shadow-lg\">\r\n                    <section className=\"bg-gray-100 p-4 rounded-lg shadow-lg mb-4\">\r\n                        <h2 className=\"text-lg mb-2\">User Feedback</h2>\r\n                        <div className=\"feedback-content overflow-x-auto whitespace-nowrap flex space-x-4 py-2\">\r\n                            {feedbacks && feedbacks.length > 0 ? (\r\n                                feedbacks.map((feedback, index) => (\r\n                                    <div key={index} className=\"feedback-item bg-white shadow-lg rounded-lg p-4 flex-none w-56\">\r\n                                        {feedback.profilePicture ? (\r\n                                            <img src={feedback.profilePicture} alt={`${feedback.name}'s profile`} className=\"w-10 h-10 rounded-full mb-2\" />\r\n                                        ) : (\r\n                                            <div className=\"w-10 h-10 rounded-full bg-gray-300 text-gray-700 flex items-center justify-center text-lg font-bold mb-2\">\r\n                                                {getInitials(feedback.name)}\r\n                                            </div>\r\n                                        )}\r\n                                        <p className=\"text-gray-800\">{feedback.text}</p>\r\n                                        <div className=\"text-yellow-500\">\r\n                                            {'â˜…'.repeat(feedback.rating)}{'â˜†'.repeat(5 - feedback.rating)}\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            ) : (\r\n                                <p className=\"text-gray-600\">No feedback available.</p>\r\n                            )}\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"bg-gray-100 p-4 rounded-lg shadow-lg\">\r\n                        <h2 className=\"text-lg mb-2\">Submit Feedback</h2>\r\n                        <form>\r\n                            <div className=\"mb-4\">\r\n                                <label htmlFor=\"rating\" className=\"block text-gray-700 mb-2\">Rating</label>\r\n                                <div className=\"flex space-x-1 text-yellow-500\">\r\n                                    <span className=\"cursor-pointer\">â˜…</span>\r\n                                    <span className=\"cursor-pointer\">â˜…</span>\r\n                                    <span className=\"cursor-pointer\">â˜…</span>\r\n                                    <span className=\"cursor-pointer\">â˜…</span>\r\n                                    <span className=\"cursor-pointer\">â˜†</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-4\">\r\n                                <label htmlFor=\"feedback\" className=\"block text-gray-700 mb-2\">Feedback</label>\r\n                                <textarea id=\"feedback\" className=\"w-full p-2 border border-gray-300 rounded\" rows=\"4\"></textarea>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\">Submit</button>\r\n                        </form>\r\n                    </section>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
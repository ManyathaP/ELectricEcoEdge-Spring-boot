{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\eclipse-workspace\\\\my-react-app E\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// // src/components/Dashboard.js\n// import React, { useState, useEffect } from 'react';\n// import DropdownMenu from './DropdownMenu';\n// import GoogleMap from './GoogleMap';\n// import Logo from '../assets/Frame 1 (1).png';\n\n// const Dashboard = ({ user }) => {\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders } = user;\n\n//     const [menuOpen, setMenuOpen] = useState(false);\n//     const [userLocation, setUserLocation] = useState(null);\n\n//     const toggleMenu = () => {\n//         setMenuOpen(!menuOpen);\n//     };\n\n//     const handleMenuItemClick = (menuItem) => {\n//         setMenuOpen(false); // Close menu after clicking\n//     };\n\n//     useEffect(() => {\n//         navigator.geolocation.getCurrentPosition(\n//             (position) => {\n//                 const { latitude, longitude } = position.coords;\n//                 setUserLocation({ lat: latitude, lng: longitude });\n//             },\n//             (error) => {\n//                 console.error('Error getting user location:', error);\n//             }\n//         );\n//     }, []);\n\n//     const getInitials = (name) => {\n//         const nameArray = name.split(' ');\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\n//         return initials;\n//     };\n\n//     const renderRecentActivities = () => {\n//         if (previousOrders && previousOrders.length > 0) {\n//             return previousOrders.map((order, index) => (\n//                 <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\n//             ));\n//         } else {\n//             return <li className=\"mb-2 text-white\">No previous orders</li>;\n//         }\n//     };\n\n//     return (\n//         <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-green-500 to-teal-500\">\n//             <header className=\"flex justify-between items-center p-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\n//                 <div className=\"logo\">\n//                     <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\n//                 </div>\n//                 <div className=\"text-2xl cursor-pointer\" onClick={toggleMenu}>\n//                     &#9776;\n//                 </div>\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\n//             </header>\n//             <main className=\"flex-1 p-10\">\n//                 <div className=\"flex flex-col md:flex-row justify-between mb-10 space-y-6 md:space-y-0 md:space-x-6\">\n//                     <section className=\"bg-gradient-to-r from-gray-800 to-gray-600 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                         {profilePicture ? (\n//                             <img src={profilePicture} alt={`${name}'s profile`} className=\"w-30 h-30 rounded-full mb-5 shadow-md\" />\n//                         ) : (\n//                             <div className=\"w-30 h-30 rounded-full bg-gradient-to-r from-blue-600 to-blue-900 text-white flex items-center justify-center text-4xl font-bold mb-5\">\n//                                 {getInitials(name)}\n//                             </div>\n//                         )}\n//                         <h1 className=\"text-2xl text-white\">{`Hello, ${name}!`}</h1>\n//                     </section>\n//                     <section className=\"bg-gradient-to-r from-gray-800 to-gray-600 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                         <p className=\"text-lg text-white\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\n//                     </section>\n//                 </div>\n//                 <section className=\"bg-gradient-to-r from-blue-500 to-blue-700 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\n//                     <h2 className=\"text-xl text-white mb-4\">Pickup Scheduled</h2>\n//                     <div className=\"notification\">\n//                         {pickupScheduled ? (\n//                             <p className=\"text-white flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\n//                         ) : (\n//                             <p className=\"text-white flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\n//                         )}\n//                         <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\n//                             {userLocation && <GoogleMap center={userLocation} />}\n//                         </div>\n//                     </div>\n//                 </section>\n//                 <section className=\"bg-gradient-to-r from-blue-500 to-blue-700 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\n//                     <h2 className=\"text-xl text-white mb-4\">Recent Activities</h2>\n//                     <ul className=\"list-none p-0 m-0\">\n//                         {recentActivities && recentActivities.length > 0 ? (\n//                             recentActivities.map((activity, index) => (\n//                                 <li key={index} className=\"text-white mb-2 hover:text-green-300 transition-colors\">{activity}</li>\n//                             ))\n//                         ) : (\n//                             renderRecentActivities()\n//                         )}\n//                     </ul>\n//                 </section>\n//             </main>\n//         </div>\n//     );\n// };\n\n// export default Dashboard;\n// src/components/Dashboard.js\n\n// import React, { useState, useEffect } from 'react';\n// import DropdownMenu from './DropdownMenu';\n// import GoogleMap from './GoogleMap';\n// import Logo from '../assets/Frame 1 (1).png';\n\n// const Dashboard = ({ user }) => {\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders, feedbacks } = user;\n\n//     const [menuOpen, setMenuOpen] = useState(false);\n//     const [userLocation, setUserLocation] = useState(null);\n\n//     const toggleMenu = () => {\n//         setMenuOpen(!menuOpen);\n//     };\n\n//     const handleMenuItemClick = (menuItem) => {\n//         setMenuOpen(false); // Close menu after clicking\n//     };\n\n//     useEffect(() => {\n//         navigator.geolocation.getCurrentPosition(\n//             (position) => {\n//                 const { latitude, longitude } = position.coords;\n//                 setUserLocation({ lat: latitude, lng: longitude });\n//             },\n//             (error) => {\n//                 console.error('Error getting user location:', error);\n//             }\n//         );\n//     }, []);\n\n//     const getInitials = (name) => {\n//         const nameArray = name.split(' ');\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\n//         return initials;\n//     };\n\n//     const renderRecentActivities = () => {\n//         if (previousOrders && previousOrders.length > 0) {\n//             return previousOrders.map((order, index) => (\n//                 <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\n//             ));\n//         } else {\n//             return <li className=\"mb-2 text-white\">No previous orders</li>;\n//         }\n//     };\n\n//     return (\n//         <div className=\"min-h-screen flex flex-col\">\n//             <header className=\"flex justify-between items-center p-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\n//                 <div className=\"logo\">\n//                     <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\n//                 </div>\n//                 <div className=\"text-2xl cursor-pointer\" onClick={toggleMenu}>\n//                     &#9776;\n//                 </div>\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\n//             </header>\n//             <main className=\"flex-1 flex flex-col md:flex-row\">\n//                 <div className=\"flex-1 bg-black p-10 text-white\">\n//                     <div className=\"flex flex-col md:flex-row justify-between mb-10 space-y-6 md:space-y-0 md:space-x-6\">\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                             {profilePicture ? (\n//                                 <img src={profilePicture} alt={`${name}'s profile`} className=\"w-30 h-30 rounded-full mb-5 shadow-md\" />\n//                             ) : (\n//                                 <div className=\"w-30 h-30 rounded-full bg-blue-600 text-white flex items-center justify-center text-4xl font-bold mb-5\">\n//                                     {getInitials(name)}\n//                                 </div>\n//                             )}\n//                             <h1 className=\"text-2xl\">{`Hello, ${name}!`}</h1>\n//                         </section>\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                             <p className=\"text-lg\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\n//                         </section>\n//                     </div>\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\n//                         <h2 className=\"text-xl mb-4\">Pickup Scheduled</h2>\n//                         <div className=\"notification\">\n//                             {pickupScheduled ? (\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\n//                             ) : (\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\n//                             )}\n//                             <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\n//                                 {userLocation && <GoogleMap center={userLocation} />}\n//                             </div>\n//                         </div>\n//                     </section>\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\n//                         <h2 className=\"text-xl mb-4\">Recent Activities</h2>\n//                         <ul className=\"list-none p-0 m-0\">\n//                             {recentActivities && recentActivities.length > 0 ? (\n//                                 recentActivities.map((activity, index) => (\n//                                     <li key={index} className=\"mb-2 hover:text-green-300 transition-colors\">{activity}</li>\n//                                 ))\n//                             ) : (\n//                                 renderRecentActivities()\n//                             )}\n//                         </ul>\n//                     </section>\n//                 </div>\n//                 <div className=\"flex-1 bg-white p-10\">\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg mb-6\">\n//                         <h2 className=\"text-xl mb-4\">User Feedback</h2>\n//                         <div className=\"feedback-content overflow-x-auto whitespace-nowrap flex space-x-6 py-4\">\n//                             {feedbacks && feedbacks.length > 0 ? (\n//                                 feedbacks.map((feedback, index) => (\n//                                     <div key={index} className=\"feedback-item bg-white shadow-lg rounded-lg p-4 flex-none w-64\">\n//                                         {feedback.profilePicture ? (\n//                                             <img src={feedback.profilePicture} alt={`${feedback.name}'s profile`} className=\"w-12 h-12 rounded-full mb-2\" />\n//                                         ) : (\n//                                             <div className=\"w-12 h-12 rounded-full bg-gray-300 text-gray-700 flex items-center justify-center text-xl font-bold mb-2\">\n//                                                 {getInitials(feedback.name)}\n//                                             </div>\n//                                         )}\n//                                         <p className=\"text-gray-800\">{feedback.text}</p>\n//                                         <div className=\"text-yellow-500\">\n//                                             {'â˜…'.repeat(feedback.rating)}{'â˜†'.repeat(5 - feedback.rating)}\n//                                         </div>\n//                                     </div>\n//                                 ))\n//                             ) : (\n//                                 <p className=\"text-gray-600\">No feedback available.</p>\n//                             )}\n//                         </div>\n//                     </section>\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg\">\n//                         <h2 className=\"text-xl mb-4\">Submit Feedback</h2>\n//                         <form>\n//                             <div className=\"mb-4\">\n//                                 <label htmlFor=\"rating\" className=\"block text-gray-700 mb-2\">Rating</label>\n//                                 <div className=\"flex space-x-1 text-yellow-500\">\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜†</span>\n//                                 </div>\n//                             </div>\n//                             <div className=\"mb-4\">\n//                                 <label htmlFor=\"feedback\" className=\"block text-gray-700 mb-2\">Feedback</label>\n//                                 <textarea id=\"feedback\" className=\"w-full p-2 border border-gray-300 rounded\" rows=\"4\"></textarea>\n//                             </div>\n//                             <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\">Submit</button>\n//                         </form>\n//                     </section>\n//                 </div>\n//             </main>\n//         </div>\n//     );\n// };\n\n// export default Dashboard;\n\n// src/components/Dashboard.js\n// import React, { useState, useEffect, useRef } from 'react';\n// import DropdownMenu from './DropdownMenu';\n// import GoogleMap from './GoogleMap';\n// import Logo from '../assets/Frame 1 (1).png';\n// import './Dashboard.css';\n\n// const Dashboard = ({ user }) => {\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders, feedbacks } = user;\n\n//     const [menuOpen, setMenuOpen] = useState(false);\n//     const [userLocation, setUserLocation] = useState(null);\n//     const menuRef = useRef(null);\n\n//     const toggleMenu = () => {\n//         setMenuOpen(!menuOpen);\n//     };\n\n//     const handleMenuItemClick = (menuItem) => {\n//         setMenuOpen(false); // Close menu after clicking\n//     };\n\n//     const handleClickOutside = (event) => {\n//         if (menuRef.current && !menuRef.current.contains(event.target)) {\n//             setMenuOpen(false);\n//         }\n//     };\n\n//     useEffect(() => {\n//         navigator.geolocation.getCurrentPosition(\n//             (position) => {\n//                 const { latitude, longitude } = position.coords;\n//                 setUserLocation({ lat: latitude, lng: longitude });\n//             },\n//             (error) => {\n//                 console.error('Error getting user location:', error);\n//             }\n//         );\n\n//         document.addEventListener('mousedown', handleClickOutside);\n//         return () => {\n//             document.removeEventListener('mousedown', handleClickOutside);\n//         };\n//     }, []);\n\n//     const getInitials = (name) => {\n//         const nameArray = name.split(' ');\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\n//         return initials;\n//     };\n\n//     const renderRecentActivities = () => {\n//         if (previousOrders && previousOrders.length > 0) {\n//             return previousOrders.map((order, index) => (\n//                 <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\n//             ));\n//         } else {\n//             return <li className=\"mb-2 text-white\">No previous orders</li>;\n//         }\n//     };\n\n//     return (\n//         <div className=\"min-h-screen flex flex-col\">\n//             <header className=\"flex justify-between items-center p-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\n//                 <div className=\"text-2xl cursor-pointer\" onClick={toggleMenu} ref={menuRef}>\n//                     &#9776;\n//                 </div>\n//                 <div className=\"logo\">\n//                     <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\n//                 </div>\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\n//             </header>\n//             <main className=\"flex-1 flex flex-col md:flex-row\">\n//                 <div className=\"flex-1 bg-black p-10 text-white\">\n//                     <div className=\"flex flex-col md:flex-row justify-between mb-10 space-y-6 md:space-y-0 md:space-x-6\">\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                             {profilePicture ? (\n//                                 <img src={profilePicture} alt={`${name}'s profile`} className=\"w-30 h-30 rounded-full mb-5 shadow-md\" />\n//                             ) : (\n//                                 <div className=\"w-30 h-30 rounded-full bg-blue-600 text-white flex items-center justify-center text-4xl font-bold mb-5\">\n//                                     {getInitials(name)}\n//                                 </div>\n//                             )}\n//                             <h1 className=\"text-2xl\">{`Hello, ${name}!`}</h1>\n//                         </section>\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                             <p className=\"text-lg\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\n//                         </section>\n//                     </div>\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\n//                         <h2 className=\"text-xl mb-4\">Pickup Scheduled</h2>\n//                         <div className=\"notification\">\n//                             {pickupScheduled ? (\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\n//                             ) : (\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\n//                             )}\n//                             <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\n//                                 {userLocation && <GoogleMap center={userLocation} />}\n//                             </div>\n//                         </div>\n//                     </section>\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\n//                         <h2 className=\"text-xl mb-4\">Recent Activities</h2>\n//                         <ul className=\"list-none p-0 m-0\">\n//                             {recentActivities && recentActivities.length > 0 ? (\n//                                 recentActivities.map((activity, index) => (\n//                                     <li key={index} className=\"mb-2 hover:text-green-300 transition-colors\">{activity}</li>\n//                                 ))\n//                             ) : (\n//                                 renderRecentActivities()\n//                             )}\n//                         </ul>\n//                     </section>\n//                 </div>\n//                 <div className=\"flex-1 bg-white p-10\">\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg mb-6\">\n//                         <h2 className=\"text-xl mb-4\">User Feedback</h2>\n//                         <div className=\"feedback-content overflow-x-auto whitespace-nowrap flex space-x-6 py-4\">\n//                             {feedbacks && feedbacks.length > 0 ? (\n//                                 feedbacks.map((feedback, index) => (\n//                                     <div key={index} className=\"feedback-item bg-white shadow-lg rounded-lg p-4 flex-none w-64\">\n//                                         {feedback.profilePicture ? (\n//                                             <img src={feedback.profilePicture} alt={`${feedback.name}'s profile`} className=\"w-12 h-12 rounded-full mb-2\" />\n//                                         ) : (\n//                                             <div className=\"w-12 h-12 rounded-full bg-gray-300 text-gray-700 flex items-center justify-center text-xl font-bold mb-2\">\n//                                                 {getInitials(feedback.name)}\n//                                             </div>\n//                                         )}\n//                                         <p className=\"text-gray-800\">{feedback.text}</p>\n//                                         <div className=\"text-yellow-500\">\n//                                             {'â˜…'.repeat(feedback.rating)}{'â˜†'.repeat(5 - feedback.rating)}\n//                                         </div>\n//                                     </div>\n//                                 ))\n//                             ) : (\n//                                 <p className=\"text-gray-600\">No feedback available.</p>\n//                             )}\n//                         </div>\n//                     </section>\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg\">\n//                         <h2 className=\"text-xl mb-4\">Submit Feedback</h2>\n//                         <form>\n//                             <div className=\"mb-4\">\n//                                 <label htmlFor=\"rating\" className=\"block text-gray-700 mb-2\">Rating</label>\n//                                 <div className=\"flex space-x-1 text-yellow-500\">\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜…</span>\n//                                     <span className=\"cursor-pointer\">â˜†</span>\n//                                 </div>\n//                             </div>\n//                             <div className=\"mb-4\">\n//                                 <label htmlFor=\"feedback\" className=\"block text-gray-700 mb-2\">Feedback</label>\n//                                 <textarea id=\"feedback\" className=\"w-full p-2 border border-gray-300 rounded\" rows=\"4\"></textarea>\n//                             </div>\n//                             <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\">Submit</button>\n//                         </form>\n//                     </section>\n//                 </div>\n//             </main>\n//         </div>\n//     );\n// };\n\n// export default Dashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\nimport DropdownMenu from './DropdownMenu.js';\nimport GoogleMap from './GoogleMap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user\n}) => {\n  _s();\n  const {\n    name,\n    rewards,\n    pickupScheduled,\n    pickupDate,\n    profilePicture,\n    recentActivities,\n    previousOrders\n  } = user;\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [userLocation, setUserLocation] = useState(null);\n  useEffect(() => {\n    // Fetch user's location using Geolocation API\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setUserLocation({\n        lat: latitude,\n        lng: longitude\n      });\n    }, error => {\n      console.error('Error getting user location:', error);\n    });\n  }, []); // Run only once on component mount\n\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n  const handleMenuItemClick = menuItem => {\n    if (menuItem === 'Dispose') {\n      window.open('/dispose', '_blank');\n    } else {\n      // Handle other menu items if needed\n    }\n  };\n  const getInitials = name => {\n    const nameArray = name.split(' ');\n    const initials = nameArray.map(part => part[0].toUpperCase()).join('');\n    return initials;\n  };\n  const renderRecentActivities = () => {\n    if (previousOrders && previousOrders.length > 0) {\n      return previousOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Ordered: \", order.itemName, \" - \", order.date]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No previous orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: \"E-Waste Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-icon\",\n        onClick: toggleMenu,\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n        isOpen: menuOpen,\n        onMenuItemClick: handleMenuItemClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"profile-box\",\n          children: [profilePicture ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profilePicture,\n            alt: `${name}'s profile`,\n            className: \"profile-picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-initials\",\n            children: getInitials(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Hello, \", name, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"rewards-box\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rewards Earned: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rewards\",\n              children: rewards\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"pickup-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pickup Scheduled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification\",\n          children: [pickupScheduled ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon\",\n              children: \"\\uD83D\\uDCC5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 32\n            }, this), \" You have a pickup scheduled on \", pickupDate, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon\",\n              children: \"\\uD83D\\uDCC5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 32\n            }, this), \" No pickup scheduled.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-section\",\n            children: userLocation && /*#__PURE__*/_jsxDEV(GoogleMap, {\n              center: userLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"recent-activities\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recent Activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recentActivities && recentActivities.length > 0 ? recentActivities.map((activity, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: activity\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 33\n          }, this)) : renderRecentActivities()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 485,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"SohdXvTdV4qxvGqSxKaH4+Egzzw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","DropdownMenu","GoogleMap","jsxDEV","_jsxDEV","Dashboard","user","_s","name","rewards","pickupScheduled","pickupDate","profilePicture","recentActivities","previousOrders","menuOpen","setMenuOpen","userLocation","setUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","error","console","toggleMenu","handleMenuItemClick","menuItem","window","open","getInitials","nameArray","split","initials","map","part","toUpperCase","join","renderRecentActivities","length","order","index","children","itemName","date","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","isOpen","onMenuItemClick","src","alt","center","activity","_c","$RefreshReg$"],"sources":["C:/Users/HP/eclipse-workspace/my-react-app E/src/components/Dashboard.js"],"sourcesContent":["// // src/components/Dashboard.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import DropdownMenu from './DropdownMenu';\r\n// import GoogleMap from './GoogleMap';\r\n// import Logo from '../assets/Frame 1 (1).png';\r\n\r\n// const Dashboard = ({ user }) => {\r\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders } = user;\r\n\r\n//     const [menuOpen, setMenuOpen] = useState(false);\r\n//     const [userLocation, setUserLocation] = useState(null);\r\n\r\n//     const toggleMenu = () => {\r\n//         setMenuOpen(!menuOpen);\r\n//     };\r\n\r\n//     const handleMenuItemClick = (menuItem) => {\r\n//         setMenuOpen(false); // Close menu after clicking\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         navigator.geolocation.getCurrentPosition(\r\n//             (position) => {\r\n//                 const { latitude, longitude } = position.coords;\r\n//                 setUserLocation({ lat: latitude, lng: longitude });\r\n//             },\r\n//             (error) => {\r\n//                 console.error('Error getting user location:', error);\r\n//             }\r\n//         );\r\n//     }, []);\r\n\r\n//     const getInitials = (name) => {\r\n//         const nameArray = name.split(' ');\r\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\r\n//         return initials;\r\n//     };\r\n\r\n//     const renderRecentActivities = () => {\r\n//         if (previousOrders && previousOrders.length > 0) {\r\n//             return previousOrders.map((order, index) => (\r\n//                 <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\r\n//             ));\r\n//         } else {\r\n//             return <li className=\"mb-2 text-white\">No previous orders</li>;\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-green-500 to-teal-500\">\r\n//             <header className=\"flex justify-between items-center p-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\r\n//                 <div className=\"logo\">\r\n//                     <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\r\n//                 </div>\r\n//                 <div className=\"text-2xl cursor-pointer\" onClick={toggleMenu}>\r\n//                     &#9776;\r\n//                 </div>\r\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\r\n//             </header>\r\n//             <main className=\"flex-1 p-10\">\r\n//                 <div className=\"flex flex-col md:flex-row justify-between mb-10 space-y-6 md:space-y-0 md:space-x-6\">\r\n//                     <section className=\"bg-gradient-to-r from-gray-800 to-gray-600 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                         {profilePicture ? (\r\n//                             <img src={profilePicture} alt={`${name}'s profile`} className=\"w-30 h-30 rounded-full mb-5 shadow-md\" />\r\n//                         ) : (\r\n//                             <div className=\"w-30 h-30 rounded-full bg-gradient-to-r from-blue-600 to-blue-900 text-white flex items-center justify-center text-4xl font-bold mb-5\">\r\n//                                 {getInitials(name)}\r\n//                             </div>\r\n//                         )}\r\n//                         <h1 className=\"text-2xl text-white\">{`Hello, ${name}!`}</h1>\r\n//                     </section>\r\n//                     <section className=\"bg-gradient-to-r from-gray-800 to-gray-600 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                         <p className=\"text-lg text-white\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\r\n//                     </section>\r\n//                 </div>\r\n//                 <section className=\"bg-gradient-to-r from-blue-500 to-blue-700 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\r\n//                     <h2 className=\"text-xl text-white mb-4\">Pickup Scheduled</h2>\r\n//                     <div className=\"notification\">\r\n//                         {pickupScheduled ? (\r\n//                             <p className=\"text-white flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\r\n//                         ) : (\r\n//                             <p className=\"text-white flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\r\n//                         )}\r\n//                         <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\r\n//                             {userLocation && <GoogleMap center={userLocation} />}\r\n//                         </div>\r\n//                     </div>\r\n//                 </section>\r\n//                 <section className=\"bg-gradient-to-r from-blue-500 to-blue-700 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\r\n//                     <h2 className=\"text-xl text-white mb-4\">Recent Activities</h2>\r\n//                     <ul className=\"list-none p-0 m-0\">\r\n//                         {recentActivities && recentActivities.length > 0 ? (\r\n//                             recentActivities.map((activity, index) => (\r\n//                                 <li key={index} className=\"text-white mb-2 hover:text-green-300 transition-colors\">{activity}</li>\r\n//                             ))\r\n//                         ) : (\r\n//                             renderRecentActivities()\r\n//                         )}\r\n//                     </ul>\r\n//                 </section>\r\n//             </main>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Dashboard;\r\n// src/components/Dashboard.js\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import DropdownMenu from './DropdownMenu';\r\n// import GoogleMap from './GoogleMap';\r\n// import Logo from '../assets/Frame 1 (1).png';\r\n\r\n// const Dashboard = ({ user }) => {\r\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders, feedbacks } = user;\r\n\r\n//     const [menuOpen, setMenuOpen] = useState(false);\r\n//     const [userLocation, setUserLocation] = useState(null);\r\n\r\n//     const toggleMenu = () => {\r\n//         setMenuOpen(!menuOpen);\r\n//     };\r\n\r\n//     const handleMenuItemClick = (menuItem) => {\r\n//         setMenuOpen(false); // Close menu after clicking\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         navigator.geolocation.getCurrentPosition(\r\n//             (position) => {\r\n//                 const { latitude, longitude } = position.coords;\r\n//                 setUserLocation({ lat: latitude, lng: longitude });\r\n//             },\r\n//             (error) => {\r\n//                 console.error('Error getting user location:', error);\r\n//             }\r\n//         );\r\n//     }, []);\r\n\r\n//     const getInitials = (name) => {\r\n//         const nameArray = name.split(' ');\r\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\r\n//         return initials;\r\n//     };\r\n\r\n//     const renderRecentActivities = () => {\r\n//         if (previousOrders && previousOrders.length > 0) {\r\n//             return previousOrders.map((order, index) => (\r\n//                 <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\r\n//             ));\r\n//         } else {\r\n//             return <li className=\"mb-2 text-white\">No previous orders</li>;\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"min-h-screen flex flex-col\">\r\n//             <header className=\"flex justify-between items-center p-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\r\n//                 <div className=\"logo\">\r\n//                     <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\r\n//                 </div>\r\n//                 <div className=\"text-2xl cursor-pointer\" onClick={toggleMenu}>\r\n//                     &#9776;\r\n//                 </div>\r\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\r\n//             </header>\r\n//             <main className=\"flex-1 flex flex-col md:flex-row\">\r\n//                 <div className=\"flex-1 bg-black p-10 text-white\">\r\n//                     <div className=\"flex flex-col md:flex-row justify-between mb-10 space-y-6 md:space-y-0 md:space-x-6\">\r\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                             {profilePicture ? (\r\n//                                 <img src={profilePicture} alt={`${name}'s profile`} className=\"w-30 h-30 rounded-full mb-5 shadow-md\" />\r\n//                             ) : (\r\n//                                 <div className=\"w-30 h-30 rounded-full bg-blue-600 text-white flex items-center justify-center text-4xl font-bold mb-5\">\r\n//                                     {getInitials(name)}\r\n//                                 </div>\r\n//                             )}\r\n//                             <h1 className=\"text-2xl\">{`Hello, ${name}!`}</h1>\r\n//                         </section>\r\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                             <p className=\"text-lg\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\r\n//                         </section>\r\n//                     </div>\r\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\r\n//                         <h2 className=\"text-xl mb-4\">Pickup Scheduled</h2>\r\n//                         <div className=\"notification\">\r\n//                             {pickupScheduled ? (\r\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\r\n//                             ) : (\r\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\r\n//                             )}\r\n//                             <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\r\n//                                 {userLocation && <GoogleMap center={userLocation} />}\r\n//                             </div>\r\n//                         </div>\r\n//                     </section>\r\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\r\n//                         <h2 className=\"text-xl mb-4\">Recent Activities</h2>\r\n//                         <ul className=\"list-none p-0 m-0\">\r\n//                             {recentActivities && recentActivities.length > 0 ? (\r\n//                                 recentActivities.map((activity, index) => (\r\n//                                     <li key={index} className=\"mb-2 hover:text-green-300 transition-colors\">{activity}</li>\r\n//                                 ))\r\n//                             ) : (\r\n//                                 renderRecentActivities()\r\n//                             )}\r\n//                         </ul>\r\n//                     </section>\r\n//                 </div>\r\n//                 <div className=\"flex-1 bg-white p-10\">\r\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg mb-6\">\r\n//                         <h2 className=\"text-xl mb-4\">User Feedback</h2>\r\n//                         <div className=\"feedback-content overflow-x-auto whitespace-nowrap flex space-x-6 py-4\">\r\n//                             {feedbacks && feedbacks.length > 0 ? (\r\n//                                 feedbacks.map((feedback, index) => (\r\n//                                     <div key={index} className=\"feedback-item bg-white shadow-lg rounded-lg p-4 flex-none w-64\">\r\n//                                         {feedback.profilePicture ? (\r\n//                                             <img src={feedback.profilePicture} alt={`${feedback.name}'s profile`} className=\"w-12 h-12 rounded-full mb-2\" />\r\n//                                         ) : (\r\n//                                             <div className=\"w-12 h-12 rounded-full bg-gray-300 text-gray-700 flex items-center justify-center text-xl font-bold mb-2\">\r\n//                                                 {getInitials(feedback.name)}\r\n//                                             </div>\r\n//                                         )}\r\n//                                         <p className=\"text-gray-800\">{feedback.text}</p>\r\n//                                         <div className=\"text-yellow-500\">\r\n//                                             {'â˜…'.repeat(feedback.rating)}{'â˜†'.repeat(5 - feedback.rating)}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 ))\r\n//                             ) : (\r\n//                                 <p className=\"text-gray-600\">No feedback available.</p>\r\n//                             )}\r\n//                         </div>\r\n//                     </section>\r\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg\">\r\n//                         <h2 className=\"text-xl mb-4\">Submit Feedback</h2>\r\n//                         <form>\r\n//                             <div className=\"mb-4\">\r\n//                                 <label htmlFor=\"rating\" className=\"block text-gray-700 mb-2\">Rating</label>\r\n//                                 <div className=\"flex space-x-1 text-yellow-500\">\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜†</span>\r\n//                                 </div>\r\n//                             </div>\r\n//                             <div className=\"mb-4\">\r\n//                                 <label htmlFor=\"feedback\" className=\"block text-gray-700 mb-2\">Feedback</label>\r\n//                                 <textarea id=\"feedback\" className=\"w-full p-2 border border-gray-300 rounded\" rows=\"4\"></textarea>\r\n//                             </div>\r\n//                             <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\">Submit</button>\r\n//                         </form>\r\n//                     </section>\r\n//                 </div>\r\n//             </main>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n// src/components/Dashboard.js\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import DropdownMenu from './DropdownMenu';\r\n// import GoogleMap from './GoogleMap';\r\n// import Logo from '../assets/Frame 1 (1).png';\r\n// import './Dashboard.css';\r\n\r\n// const Dashboard = ({ user }) => {\r\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders, feedbacks } = user;\r\n\r\n//     const [menuOpen, setMenuOpen] = useState(false);\r\n//     const [userLocation, setUserLocation] = useState(null);\r\n//     const menuRef = useRef(null);\r\n\r\n//     const toggleMenu = () => {\r\n//         setMenuOpen(!menuOpen);\r\n//     };\r\n\r\n//     const handleMenuItemClick = (menuItem) => {\r\n//         setMenuOpen(false); // Close menu after clicking\r\n//     };\r\n\r\n//     const handleClickOutside = (event) => {\r\n//         if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n//             setMenuOpen(false);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         navigator.geolocation.getCurrentPosition(\r\n//             (position) => {\r\n//                 const { latitude, longitude } = position.coords;\r\n//                 setUserLocation({ lat: latitude, lng: longitude });\r\n//             },\r\n//             (error) => {\r\n//                 console.error('Error getting user location:', error);\r\n//             }\r\n//         );\r\n\r\n//         document.addEventListener('mousedown', handleClickOutside);\r\n//         return () => {\r\n//             document.removeEventListener('mousedown', handleClickOutside);\r\n//         };\r\n//     }, []);\r\n\r\n//     const getInitials = (name) => {\r\n//         const nameArray = name.split(' ');\r\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\r\n//         return initials;\r\n//     };\r\n\r\n//     const renderRecentActivities = () => {\r\n//         if (previousOrders && previousOrders.length > 0) {\r\n//             return previousOrders.map((order, index) => (\r\n//                 <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\r\n//             ));\r\n//         } else {\r\n//             return <li className=\"mb-2 text-white\">No previous orders</li>;\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"min-h-screen flex flex-col\">\r\n//             <header className=\"flex justify-between items-center p-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\r\n//                 <div className=\"text-2xl cursor-pointer\" onClick={toggleMenu} ref={menuRef}>\r\n//                     &#9776;\r\n//                 </div>\r\n//                 <div className=\"logo\">\r\n//                     <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\r\n//                 </div>\r\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\r\n//             </header>\r\n//             <main className=\"flex-1 flex flex-col md:flex-row\">\r\n//                 <div className=\"flex-1 bg-black p-10 text-white\">\r\n//                     <div className=\"flex flex-col md:flex-row justify-between mb-10 space-y-6 md:space-y-0 md:space-x-6\">\r\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                             {profilePicture ? (\r\n//                                 <img src={profilePicture} alt={`${name}'s profile`} className=\"w-30 h-30 rounded-full mb-5 shadow-md\" />\r\n//                             ) : (\r\n//                                 <div className=\"w-30 h-30 rounded-full bg-blue-600 text-white flex items-center justify-center text-4xl font-bold mb-5\">\r\n//                                     {getInitials(name)}\r\n//                                 </div>\r\n//                             )}\r\n//                             <h1 className=\"text-2xl\">{`Hello, ${name}!`}</h1>\r\n//                         </section>\r\n//                         <section className=\"bg-gray-800 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                             <p className=\"text-lg\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\r\n//                         </section>\r\n//                     </div>\r\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\r\n//                         <h2 className=\"text-xl mb-4\">Pickup Scheduled</h2>\r\n//                         <div className=\"notification\">\r\n//                             {pickupScheduled ? (\r\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\r\n//                             ) : (\r\n//                                 <p className=\"flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\r\n//                             )}\r\n//                             <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\r\n//                                 {userLocation && <GoogleMap center={userLocation} />}\r\n//                             </div>\r\n//                         </div>\r\n//                     </section>\r\n//                     <section className=\"bg-blue-600 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\r\n//                         <h2 className=\"text-xl mb-4\">Recent Activities</h2>\r\n//                         <ul className=\"list-none p-0 m-0\">\r\n//                             {recentActivities && recentActivities.length > 0 ? (\r\n//                                 recentActivities.map((activity, index) => (\r\n//                                     <li key={index} className=\"mb-2 hover:text-green-300 transition-colors\">{activity}</li>\r\n//                                 ))\r\n//                             ) : (\r\n//                                 renderRecentActivities()\r\n//                             )}\r\n//                         </ul>\r\n//                     </section>\r\n//                 </div>\r\n//                 <div className=\"flex-1 bg-white p-10\">\r\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg mb-6\">\r\n//                         <h2 className=\"text-xl mb-4\">User Feedback</h2>\r\n//                         <div className=\"feedback-content overflow-x-auto whitespace-nowrap flex space-x-6 py-4\">\r\n//                             {feedbacks && feedbacks.length > 0 ? (\r\n//                                 feedbacks.map((feedback, index) => (\r\n//                                     <div key={index} className=\"feedback-item bg-white shadow-lg rounded-lg p-4 flex-none w-64\">\r\n//                                         {feedback.profilePicture ? (\r\n//                                             <img src={feedback.profilePicture} alt={`${feedback.name}'s profile`} className=\"w-12 h-12 rounded-full mb-2\" />\r\n//                                         ) : (\r\n//                                             <div className=\"w-12 h-12 rounded-full bg-gray-300 text-gray-700 flex items-center justify-center text-xl font-bold mb-2\">\r\n//                                                 {getInitials(feedback.name)}\r\n//                                             </div>\r\n//                                         )}\r\n//                                         <p className=\"text-gray-800\">{feedback.text}</p>\r\n//                                         <div className=\"text-yellow-500\">\r\n//                                             {'â˜…'.repeat(feedback.rating)}{'â˜†'.repeat(5 - feedback.rating)}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 ))\r\n//                             ) : (\r\n//                                 <p className=\"text-gray-600\">No feedback available.</p>\r\n//                             )}\r\n//                         </div>\r\n//                     </section>\r\n//                     <section className=\"bg-gray-100 p-8 rounded-lg shadow-lg\">\r\n//                         <h2 className=\"text-xl mb-4\">Submit Feedback</h2>\r\n//                         <form>\r\n//                             <div className=\"mb-4\">\r\n//                                 <label htmlFor=\"rating\" className=\"block text-gray-700 mb-2\">Rating</label>\r\n//                                 <div className=\"flex space-x-1 text-yellow-500\">\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜…</span>\r\n//                                     <span className=\"cursor-pointer\">â˜†</span>\r\n//                                 </div>\r\n//                             </div>\r\n//                             <div className=\"mb-4\">\r\n//                                 <label htmlFor=\"feedback\" className=\"block text-gray-700 mb-2\">Feedback</label>\r\n//                                 <textarea id=\"feedback\" className=\"w-full p-2 border border-gray-300 rounded\" rows=\"4\"></textarea>\r\n//                             </div>\r\n//                             <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\">Submit</button>\r\n//                         </form>\r\n//                     </section>\r\n//                 </div>\r\n//             </main>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Dashboard.css';\r\nimport DropdownMenu from './DropdownMenu.js';\r\nimport GoogleMap from './GoogleMap';\r\n\r\nconst Dashboard = ({ user }) => {\r\n    const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders } = user;\r\n\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [userLocation, setUserLocation] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch user's location using Geolocation API\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                setUserLocation({ lat: latitude, lng: longitude });\r\n            },\r\n            (error) => {\r\n                console.error('Error getting user location:', error);\r\n            }\r\n        );\r\n    }, []); // Run only once on component mount\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpen(!menuOpen);\r\n    };\r\n\r\n    const handleMenuItemClick = (menuItem) => {\r\n        if (menuItem === 'Dispose') {\r\n            window.open('/dispose', '_blank');\r\n        } else {\r\n            // Handle other menu items if needed\r\n        }\r\n    };\r\n\r\n    const getInitials = (name) => {\r\n        const nameArray = name.split(' ');\r\n        const initials = nameArray.map(part => part[0].toUpperCase()).join('');\r\n        return initials;\r\n    };\r\n\r\n    const renderRecentActivities = () => {\r\n        if (previousOrders && previousOrders.length > 0) {\r\n            return previousOrders.map((order, index) => (\r\n                <li key={index}>Ordered: {order.itemName} - {order.date}</li>\r\n            ));\r\n        } else {\r\n            return <li>No previous orders</li>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <header className=\"dashboard-header\">\r\n                <div className=\"logo\">E-Waste Management</div>\r\n                <div className=\"menu-icon\" onClick={toggleMenu}>\r\n                    &#9776;\r\n                </div>\r\n                <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\r\n            </header>\r\n            <main className=\"dashboard-main\">\r\n                <div className=\"info-container\">\r\n                    <section className=\"profile-box\">\r\n                        {profilePicture ? (\r\n                            <img src={profilePicture} alt={`${name}'s profile`} className=\"profile-picture\" />\r\n                        ) : (\r\n                            <div className=\"profile-initials\">{getInitials(name)}</div>\r\n                        )}\r\n                        <h1>Hello, {name}!</h1>\r\n                    </section>\r\n                    <section className=\"rewards-box\">\r\n                        <p>Rewards Earned: <span className=\"rewards\">{rewards}</span></p>\r\n                    </section>\r\n                </div>\r\n                <section className=\"pickup-section\">\r\n                    <h2>Pickup Scheduled</h2>\r\n                    <div className=\"notification\">\r\n                        {pickupScheduled ? (\r\n                            <p><i className=\"icon\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\r\n                        ) : (\r\n                            <p><i className=\"icon\">ðŸ“…</i> No pickup scheduled.</p>\r\n                        )}\r\n                        <div className=\"map-section\">\r\n                            {userLocation && <GoogleMap center={userLocation} />}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"recent-activities\">\r\n                    <h2>Recent Activities</h2>\r\n                    <ul>\r\n                        {recentActivities && recentActivities.length > 0 ? (\r\n                            recentActivities.map((activity, index) => (\r\n                                <li key={index}>{activity}</li>\r\n                            ))\r\n                        ) : (\r\n                            renderRecentActivities()\r\n                        )}\r\n                    </ul>\r\n                </section>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
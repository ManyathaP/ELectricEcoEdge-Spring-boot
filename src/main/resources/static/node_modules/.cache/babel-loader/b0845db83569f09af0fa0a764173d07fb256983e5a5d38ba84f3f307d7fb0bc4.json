{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\eclipse-workspace\\\\my-react-app E\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './DisposeMenu.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const items = [{\n    name: 'Computers',\n    image: 'logo192.png'\n  }, {\n    name: 'IC Computers',\n    image: 'logo192.png'\n  }, {\n    name: 'Laptops',\n    image: 'logo192.png'\n  }, {\n    name: 'Mobile Phones',\n    image: 'logo192.png'\n  }, {\n    name: 'Large Items',\n    image: 'logo192.png'\n  }, {\n    name: 'Small Items',\n    image: 'logo192.png'\n  }];\n  const handleClick = item => {\n    navigate(`/dispose/${item.name}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dispose-menu-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dispose-items\",\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dispose-item\",\n        onClick: () => handleClick(item),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/' + item.image,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n\n  //     const [users, setUsers] = useState([]);\n  //     const [reward, setReward] = useState('');\n  //     const [status, setStatus] = useState('');\n\n  //     useEffect(() => {\n  //         fetchUsers();\n  //     }, []);\n\n  //     const fetchUsers = async () => {\n  //         try {\n  //             const response = await axios.get('http://localhost:8090/api/v1/users');\n  //             setUsers(response.data);\n  //         } catch (error) {\n  //             console.error('Error fetching users', error);\n  //             toast.error('Error fetching users');\n  //         }\n  //     };\n\n  //     const handleRewardUpload = async (userId) => {\n  //         try {\n  //             await axios.post(`http://localhost:8090/api/v1/users/${userId}/upload-reward`, { reward });\n  //             toast.success('Reward uploaded successfully');\n  //             fetchUsers(); // Refresh user list\n  //         } catch (error) {\n  //             console.error('Error uploading reward', error);\n  //             toast.error('Error uploading reward');\n  //         }\n  //     };\n\n  //     const handleStatusUpdate = async (userId) => {\n  //         try {\n  //             await axios.put(`http://localhost:8090/api/v1/users/${userId}/update-status`, { status });\n  //             toast.success('Status updated successfully');\n  //             fetchUsers(); // Refresh user list\n  //         } catch (error) {\n  //             console.error('Error updating status', error);\n  //             toast.error('Error updating status');\n  //         }\n  //     };\n\n  //     return (\n  //         <div>\n  //             <h1>Admin Dashboard</h1>\n  //             <table>\n  //                 <thead>\n  //                     <tr>\n  //                         <th>Username</th>\n  //                         <th>Email</th>\n  //                         <th>Phone No</th>\n  //                         <th>Location</th>\n  //                         <th>Image</th>\n  //                         <th>Actions</th>\n  //                     </tr>\n  //                 </thead>\n  //                 <tbody>\n  //                     {users.map((user) => (\n  //                         <tr key={user.id}>\n  //                             <td>{user.username}</td>\n  //                             <td>{user.email}</td>\n  //                             <td>{user.phone_no}</td>\n  //                             <td>{user.location}</td>\n  //                             <td><img src={user.image} alt=\"User\" width=\"50\" height=\"50\" /></td>\n  //                             <td>\n  //                                 <input\n  //                                     type=\"text\"\n  //                                     placeholder=\"Reward\"\n  //                                     value={reward}\n  //                                     onChange={(e) => setReward(e.target.value)}\n  //                                 />\n  //                                 <button onClick={() => handleRewardUpload(user.id)}>Upload Reward</button>\n  //                                 <input\n  //                                     type=\"text\"\n  //                                     placeholder=\"Status\"\n  //                                     value={status}\n  //                                     onChange={(e) => setStatus(e.target.value)}\n  //                                 />\n  //                                 <button onClick={() => handleStatusUpdate(user.id)}>Update Status</button>\n  //                             </td>\n  //                         </tr>\n  //                     ))}\n  //                 </tbody>\n  //             </table>\n  //         </div>\n  //     );\n};\n_s(AdminDashboard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","AdminDashboard","_s","navigate","items","name","image","handleClick","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","src","process","env","PUBLIC_URL","alt","_c","$RefreshReg$"],"sources":["C:/Users/HP/eclipse-workspace/my-react-app E/src/components/AdminDashboard.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './DisposeMenu.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst AdminDashboard = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const items = [\r\n        { name: 'Computers', image: 'logo192.png' },\r\n        { name: 'IC Computers', image: 'logo192.png' },\r\n        { name: 'Laptops', image: 'logo192.png' },\r\n        { name: 'Mobile Phones', image: 'logo192.png' },\r\n        { name: 'Large Items', image: 'logo192.png' },\r\n        { name: 'Small Items', image: 'logo192.png' },\r\n    ];\r\n\r\n    const handleClick = (item) => {\r\n        navigate(`/dispose/${item.name}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dispose-menu-container\">\r\n            <h2>Choose a Category</h2><br/><br/>\r\n            <div className=\"dispose-items\">\r\n                {items.map((item, index) => (\r\n                    <div key={index} className=\"dispose-item\" onClick={() => handleClick(item)}>\r\n                        <img src={process.env.PUBLIC_URL + '/' + item.image} alt={item.name} />\r\n                        <p>{item.name}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n//     const [users, setUsers] = useState([]);\r\n//     const [reward, setReward] = useState('');\r\n//     const [status, setStatus] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         fetchUsers();\r\n//     }, []);\r\n\r\n//     const fetchUsers = async () => {\r\n//         try {\r\n//             const response = await axios.get('http://localhost:8090/api/v1/users');\r\n//             setUsers(response.data);\r\n//         } catch (error) {\r\n//             console.error('Error fetching users', error);\r\n//             toast.error('Error fetching users');\r\n//         }\r\n//     };\r\n\r\n//     const handleRewardUpload = async (userId) => {\r\n//         try {\r\n//             await axios.post(`http://localhost:8090/api/v1/users/${userId}/upload-reward`, { reward });\r\n//             toast.success('Reward uploaded successfully');\r\n//             fetchUsers(); // Refresh user list\r\n//         } catch (error) {\r\n//             console.error('Error uploading reward', error);\r\n//             toast.error('Error uploading reward');\r\n//         }\r\n//     };\r\n\r\n//     const handleStatusUpdate = async (userId) => {\r\n//         try {\r\n//             await axios.put(`http://localhost:8090/api/v1/users/${userId}/update-status`, { status });\r\n//             toast.success('Status updated successfully');\r\n//             fetchUsers(); // Refresh user list\r\n//         } catch (error) {\r\n//             console.error('Error updating status', error);\r\n//             toast.error('Error updating status');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Admin Dashboard</h1>\r\n//             <table>\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Username</th>\r\n//                         <th>Email</th>\r\n//                         <th>Phone No</th>\r\n//                         <th>Location</th>\r\n//                         <th>Image</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {users.map((user) => (\r\n//                         <tr key={user.id}>\r\n//                             <td>{user.username}</td>\r\n//                             <td>{user.email}</td>\r\n//                             <td>{user.phone_no}</td>\r\n//                             <td>{user.location}</td>\r\n//                             <td><img src={user.image} alt=\"User\" width=\"50\" height=\"50\" /></td>\r\n//                             <td>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Reward\"\r\n//                                     value={reward}\r\n//                                     onChange={(e) => setReward(e.target.value)}\r\n//                                 />\r\n//                                 <button onClick={() => handleRewardUpload(user.id)}>Upload Reward</button>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Status\"\r\n//                                     value={status}\r\n//                                     onChange={(e) => setStatus(e.target.value)}\r\n//                                 />\r\n//                                 <button onClick={() => handleStatusUpdate(user.id)}>Update Status</button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//         </div>\r\n//     );\r\n };\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './Rewards.css';\n// const Rewards = ({ computerId, onClose }) => {\n//   const [selectedPoints, setSelectedPoints] = useState(300);\n//   const handlePointsChange = (e) => {\n//     setSelectedPoints(e.target.value);\n//   };\n//   const handleRewardSubmit = async () => {\n//     try {\n//       // Replace with your actual API endpoint and data structure\n//       await axios.post(`http://localhost:8090/api/v1/items/computers/${computerId}/rewards`, { points: selectedPoints });\n//       alert(`Rewards of ${selectedPoints} points given to computer ID ${computerId}`);\n//     } catch (error) {\n//       console.error('Error giving rewards:', error);\n//     }\n//     onClose(); // Close the dropdown after submitting\n//   };\n//   const generatePointsOptions = () => {\n//     const options = [];\n//     for (let i = 300; i <= 5000; i += 50) {\n//       options.push(<option key={i} value={i}>{i}</option>);\n//     }\n//     return options;\n//   };\n//   return (\n//     <div className=\"rewards-container\">\n//       <select className=\"rewards-select\" value={selectedPoints} onChange={handlePointsChange}>\n//         {generatePointsOptions()}\n//       </select>\n//       <button className=\"rewards-submit\" onClick={handleRewardSubmit}>Submit</button>\n//     </div>\n//   );\n// };\n// export default Rewards;\nimport React,{useState,useEffect}from'react';import axios from'axios';import'./Rewards.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Rewards=_ref=>{let{userId,onClose}=_ref;const[selectedPoints,setSelectedPoints]=useState(300);const[totalPoints,setTotalPoints]=useState(0);useEffect(()=>{const fetchTotalPoints=async()=>{try{const response=await axios.get(\"http://localhost:8090/api/v1/rewards/\".concat(userId));setTotalPoints(response.data.totalPoints);}catch(error){console.error('Error fetching total points:',error);}};fetchTotalPoints();},[userId]);const handlePointsChange=e=>{setSelectedPoints(e.target.value);};const handleRewardSubmit=async()=>{try{await axios.post(\"http://localhost:8090/api/v1/rewards\",{userId,points:selectedPoints});alert(\"Rewards of \".concat(selectedPoints,\" points given to user ID \").concat(userId));setTotalPoints(totalPoints+parseInt(selectedPoints));}catch(error){console.error('Error giving rewards:',error);}onClose();// Close the dropdown after submitting\n};const generatePointsOptions=()=>{const options=[];for(let i=300;i<=5000;i+=50){options.push(/*#__PURE__*/_jsx(\"option\",{value:i,children:i},i));}return options;};return/*#__PURE__*/_jsxs(\"div\",{className:\"rewards-container\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Total Points: \",totalPoints]}),/*#__PURE__*/_jsx(\"select\",{className:\"rewards-select\",value:selectedPoints,onChange:handlePointsChange,children:generatePointsOptions()}),/*#__PURE__*/_jsx(\"button\",{className:\"rewards-submit\",onClick:handleRewardSubmit,children:\"Submit\"})]});};export default Rewards;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Rewards","_ref","userId","onClose","selectedPoints","setSelectedPoints","totalPoints","setTotalPoints","fetchTotalPoints","response","get","concat","data","error","console","handlePointsChange","e","target","value","handleRewardSubmit","post","points","alert","parseInt","generatePointsOptions","options","i","push","children","className","onChange","onClick"],"sources":["C:/Users/HP/eclipse-workspace/my-react-app E/src/components/Rewards.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './Rewards.css';\r\n\r\n// const Rewards = ({ computerId, onClose }) => {\r\n//   const [selectedPoints, setSelectedPoints] = useState(300);\r\n\r\n//   const handlePointsChange = (e) => {\r\n//     setSelectedPoints(e.target.value);\r\n//   };\r\n\r\n//   const handleRewardSubmit = async () => {\r\n//     try {\r\n//       // Replace with your actual API endpoint and data structure\r\n//       await axios.post(`http://localhost:8090/api/v1/items/computers/${computerId}/rewards`, { points: selectedPoints });\r\n//       alert(`Rewards of ${selectedPoints} points given to computer ID ${computerId}`);\r\n//     } catch (error) {\r\n//       console.error('Error giving rewards:', error);\r\n//     }\r\n//     onClose(); // Close the dropdown after submitting\r\n//   };\r\n\r\n//   const generatePointsOptions = () => {\r\n//     const options = [];\r\n//     for (let i = 300; i <= 5000; i += 50) {\r\n//       options.push(<option key={i} value={i}>{i}</option>);\r\n//     }\r\n//     return options;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"rewards-container\">\r\n//       <select className=\"rewards-select\" value={selectedPoints} onChange={handlePointsChange}>\r\n//         {generatePointsOptions()}\r\n//       </select>\r\n//       <button className=\"rewards-submit\" onClick={handleRewardSubmit}>Submit</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Rewards;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Rewards.css';\r\n\r\nconst Rewards = ({ userId, onClose }) => {\r\n  const [selectedPoints, setSelectedPoints] = useState(300);\r\n  const [totalPoints, setTotalPoints] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchTotalPoints = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8090/api/v1/rewards/${userId}`);\r\n        setTotalPoints(response.data.totalPoints);\r\n      } catch (error) {\r\n        console.error('Error fetching total points:', error);\r\n      }\r\n    };\r\n\r\n    fetchTotalPoints();\r\n  }, [userId]);\r\n\r\n  const handlePointsChange = (e) => {\r\n    setSelectedPoints(e.target.value);\r\n  };\r\n\r\n  const handleRewardSubmit = async () => {\r\n    try {\r\n      await axios.post(`http://localhost:8090/api/v1/rewards`, { userId, points: selectedPoints });\r\n      alert(`Rewards of ${selectedPoints} points given to user ID ${userId}`);\r\n      setTotalPoints(totalPoints + parseInt(selectedPoints));\r\n    } catch (error) {\r\n      console.error('Error giving rewards:', error);\r\n    }\r\n    onClose(); // Close the dropdown after submitting\r\n  };\r\n\r\n  const generatePointsOptions = () => {\r\n    const options = [];\r\n    for (let i = 300; i <= 5000; i += 50) {\r\n      options.push(<option key={i} value={i}>{i}</option>);\r\n    }\r\n    return options;\r\n  };\r\n\r\n  return (\r\n    <div className=\"rewards-container\">\r\n      <div>Total Points: {totalPoints}</div>\r\n      <select className=\"rewards-select\" value={selectedPoints} onChange={handlePointsChange}>\r\n        {generatePointsOptions()}\r\n      </select>\r\n      <button className=\"rewards-submit\" onClick={handleRewardSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rewards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
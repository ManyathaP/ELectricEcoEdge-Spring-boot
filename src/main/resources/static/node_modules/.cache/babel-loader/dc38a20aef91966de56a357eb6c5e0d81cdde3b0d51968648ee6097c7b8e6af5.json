{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\eclipse-workspace\\\\my-react-app E\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\n// import React, { useState, useEffect } from 'react';\n// import DropdownMenu from './DropdownMenu';\n// import GoogleMap from './GoogleMap';\n// import Logo from '../assets/Frame 1 (1).png';\n\n// const Dashboard = ({ user }) => {\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders } = user;\n\n//     const [menuOpen, setMenuOpen] = useState(false);\n//     const [userLocation, setUserLocation] = useState(null);\n\n//     const toggleMenu = () => {\n//         setMenuOpen(!menuOpen);\n//     };\n\n//     const handleMenuItemClick = (menuItem) => {\n//         setMenuOpen(false); // Close menu after clicking\n//     };\n\n//     useEffect(() => {\n//         navigator.geolocation.getCurrentPosition(\n//             (position) => {\n//                 const { latitude, longitude } = position.coords;\n//                 setUserLocation({ lat: latitude, lng: longitude });\n//             },\n//             (error) => {\n//                 console.error('Error getting user location:', error);\n//             }\n//         );\n//     }, []);\n\n//     const getInitials = (name) => {\n//         const nameArray = name.split(' ');\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\n//         return initials;\n//     };\n\n//     const renderRecentActivities = () => {\n//         if (previousOrders && previousOrders.length > 0) {\n//             return previousOrders.map((order, index) => (\n//                 <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\n//             ));\n//         } else {\n//             return <li className=\"mb-2 text-white\">No previous orders</li>;\n//         }\n//     };\n\n//     return (\n//         <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-green-500 to-teal-500\">\n//             <header className=\"flex justify-between items-center p-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\n//                 <div className=\"logo\">\n//                     <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\n//                 </div>\n//                 <div className=\"text-2xl cursor-pointer\" onClick={toggleMenu}>\n//                     &#9776;\n//                 </div>\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\n//             </header>\n//             <main className=\"flex-1 p-10\">\n//                 <div className=\"flex flex-col md:flex-row justify-between mb-10 space-y-6 md:space-y-0 md:space-x-6\">\n//                     <section className=\"bg-gradient-to-r from-gray-800 to-gray-600 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                         {profilePicture ? (\n//                             <img src={profilePicture} alt={`${name}'s profile`} className=\"w-30 h-30 rounded-full mb-5 shadow-md\" />\n//                         ) : (\n//                             <div className=\"w-30 h-30 rounded-full bg-gradient-to-r from-blue-600 to-blue-900 text-white flex items-center justify-center text-4xl font-bold mb-5\">\n//                                 {getInitials(name)}\n//                             </div>\n//                         )}\n//                         <h1 className=\"text-2xl text-white\">{`Hello, ${name}!`}</h1>\n//                     </section>\n//                     <section className=\"bg-gradient-to-r from-gray-800 to-gray-600 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\n//                         <p className=\"text-lg text-white\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\n//                     </section>\n//                 </div>\n//                 <section className=\"bg-gradient-to-r from-blue-500 to-blue-700 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\n//                     <h2 className=\"text-xl text-white mb-4\">Pickup Scheduled</h2>\n//                     <div className=\"notification\">\n//                         {pickupScheduled ? (\n//                             <p className=\"text-white flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\n//                         ) : (\n//                             <p className=\"text-white flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\n//                         )}\n//                         <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\n//                             {userLocation && <GoogleMap center={userLocation} />}\n//                         </div>\n//                     </div>\n//                 </section>\n//                 <section className=\"bg-gradient-to-r from-blue-500 to-blue-700 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\n//                     <h2 className=\"text-xl text-white mb-4\">Recent Activities</h2>\n//                     <ul className=\"list-none p-0 m-0\">\n//                         {recentActivities && recentActivities.length > 0 ? (\n//                             recentActivities.map((activity, index) => (\n//                                 <li key={index} className=\"text-white mb-2 hover:text-green-300 transition-colors\">{activity}</li>\n//                             ))\n//                         ) : (\n//                             renderRecentActivities()\n//                         )}\n//                     </ul>\n//                 </section>\n//             </main>\n//         </div>\n//     );\n// };\n\n// export default Dashboard;\n\n// src/components/Dashboard.js\n// import React, { useState, useEffect } from 'react';\n// import DropdownMenu from './DropdownMenu';\n// import GoogleMap from './GoogleMap';\n// import Logo from '../assets/Frame 1 (1).png';\n\n// const Dashboard = ({ user }) => {\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders } = user;\n\n//     const [menuOpen, setMenuOpen] = useState(false);\n//     const [userLocation, setUserLocation] = useState(null);\n\n//     const toggleMenu = () => {\n//         setMenuOpen(!menuOpen);\n//     };\n\n//     const handleMenuItemClick = (menuItem) => {\n//         setMenuOpen(false); // Close menu after clicking\n//     };\n\n//     useEffect(() => {\n//         navigator.geolocation.getCurrentPosition(\n//             (position) => {\n//                 const { latitude, longitude } = position.coords;\n//                 setUserLocation({ lat: latitude, lng: longitude });\n//             },\n//             (error) => {\n//                 console.error('Error getting user location:', error);\n//             }\n//         );\n//     }, []);\n\n//     const getInitials = (name) => {\n//         const nameArray = name.split(' ');\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\n//         return initials;\n//     };\n\n//     const renderRecentActivities = () => {\n//         if (previousOrders && previousOrders.length > 0) {\n//             return previousOrders.map((order, index) => (\n//                 <li key={index} className=\"mb-2 text-dark\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\n//             ));\n//         } else {\n//             return <li className=\"mb-2 text-dark\">No previous orders</li>;\n//         }\n//     };\n\n//     return (\n//         <div className=\"dashboard-container\">\n//             <header className=\"dashboard-header\">\n//                 <div className=\"logo\">\n//                     <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\n//                 </div>\n//                 <div className=\"menu-icon\" onClick={toggleMenu}>\n//                     &#9776;\n//                 </div>\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\n//             </header>\n//             <main className=\"dashboard-main\">\n//                 <div className=\"info-container\">\n//                     <section className=\"profile-box light-section\">\n//                         {profilePicture ? (\n//                             <img src={profilePicture} alt={`${name}'s profile`} className=\"profile-picture\" />\n//                         ) : (\n//                             <div className=\"profile-initials\">\n//                                 {getInitials(name)}\n//                             </div>\n//                         )}\n//                         <h1>{`Hello, ${name}!`}</h1>\n//                     </section>\n//                     <section className=\"rewards-box dark-section\">\n//                         <p>Rewards Earned: <span className=\"rewards\">{rewards}</span></p>\n//                     </section>\n//                 </div>\n//                 <section className=\"pickup-section dark-section\">\n//                     <h2>Pickup Scheduled</h2>\n//                     <div className=\"notification\">\n//                         {pickupScheduled ? (\n//                             <p><i className=\"icon\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\n//                         ) : (\n//                             <p><i className=\"icon\">ðŸ“…</i> No pickup scheduled.</p>\n//                         )}\n//                         <div className=\"map-section\">\n//                             {userLocation && <GoogleMap center={userLocation} />}\n//                         </div>\n//                     </div>\n//                 </section>\n//                 <section className=\"recent-activities light-section\">\n//                     <h2>Recent Activities</h2>\n//                     <ul>\n//                         {recentActivities && recentActivities.length > 0 ? (\n//                             recentActivities.map((activity, index) => (\n//                                 <li key={index} className=\"activity-item\">{activity}</li>\n//                             ))\n//                         ) : (\n//                             renderRecentActivities()\n//                         )}\n//                     </ul>\n//                 </section>\n//             </main>\n//         </div>\n//     );\n// };\n\n// export default Dashboard;\n\n// src/components/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport DropdownMenu from './DropdownMenu';\nimport GoogleMap from './GoogleMap';\nimport Logo from '../assets/Frame 1 (1).png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user\n}) => {\n  _s();\n  const {\n    name,\n    rewards,\n    pickupScheduled,\n    pickupDate,\n    profilePicture,\n    recentActivities,\n    previousOrders\n  } = user;\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [userLocation, setUserLocation] = useState(null);\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n  const handleMenuItemClick = menuItem => {\n    setMenuOpen(false); // Close menu after clicking\n  };\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setUserLocation({\n        lat: latitude,\n        lng: longitude\n      });\n    }, error => {\n      console.error('Error getting user location:', error);\n    });\n  }, []);\n  const getInitials = name => {\n    const nameArray = name.split(' ');\n    const initials = nameArray.map(part => part[0].toUpperCase()).join('');\n    return initials;\n  };\n  const renderRecentActivities = () => {\n    if (previousOrders && previousOrders.length > 0) {\n      return previousOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-2\",\n        children: `Ordered: ${order.itemName} - ${order.date}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-2\",\n        children: \"No previous orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"Logo\",\n          className: \"w-24 h-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-icon\",\n        onClick: toggleMenu,\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n        isOpen: menuOpen,\n        onMenuItemClick: handleMenuItemClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-half dashboard-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"profile-box hollow-effect\",\n          children: [profilePicture ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profilePicture,\n            alt: `${name}'s profile`,\n            className: \"profile-picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-initials\",\n            children: getInitials(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: `Hello, ${name}!`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"rewards-box hollow-effect\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rewards Earned: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rewards\",\n              children: rewards\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-half dashboard-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"pickup-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Pickup Scheduled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification\",\n            children: [pickupScheduled ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon\",\n                children: \"\\uD83D\\uDCC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 36\n              }, this), \" You have a pickup scheduled on \", pickupDate, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon\",\n                children: \"\\uD83D\\uDCC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 36\n              }, this), \" No pickup scheduled.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-section\",\n              children: userLocation && /*#__PURE__*/_jsxDEV(GoogleMap, {\n                center: userLocation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"recent-activities\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recent Activities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: recentActivities && recentActivities.length > 0 ? recentActivities.map((activity, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"activity-item\",\n              children: activity\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 37\n            }, this)) : renderRecentActivities()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"SohdXvTdV4qxvGqSxKaH4+Egzzw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","DropdownMenu","GoogleMap","Logo","jsxDEV","_jsxDEV","Dashboard","user","_s","name","rewards","pickupScheduled","pickupDate","profilePicture","recentActivities","previousOrders","menuOpen","setMenuOpen","userLocation","setUserLocation","toggleMenu","handleMenuItemClick","menuItem","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","error","console","getInitials","nameArray","split","initials","map","part","toUpperCase","join","renderRecentActivities","length","order","index","className","children","itemName","date","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","isOpen","onMenuItemClick","center","activity","_c","$RefreshReg$"],"sources":["C:/Users/HP/eclipse-workspace/my-react-app E/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import DropdownMenu from './DropdownMenu';\r\n// import GoogleMap from './GoogleMap';\r\n// import Logo from '../assets/Frame 1 (1).png';\r\n\r\n// const Dashboard = ({ user }) => {\r\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders } = user;\r\n\r\n//     const [menuOpen, setMenuOpen] = useState(false);\r\n//     const [userLocation, setUserLocation] = useState(null);\r\n\r\n//     const toggleMenu = () => {\r\n//         setMenuOpen(!menuOpen);\r\n//     };\r\n\r\n//     const handleMenuItemClick = (menuItem) => {\r\n//         setMenuOpen(false); // Close menu after clicking\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         navigator.geolocation.getCurrentPosition(\r\n//             (position) => {\r\n//                 const { latitude, longitude } = position.coords;\r\n//                 setUserLocation({ lat: latitude, lng: longitude });\r\n//             },\r\n//             (error) => {\r\n//                 console.error('Error getting user location:', error);\r\n//             }\r\n//         );\r\n//     }, []);\r\n\r\n//     const getInitials = (name) => {\r\n//         const nameArray = name.split(' ');\r\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\r\n//         return initials;\r\n//     };\r\n\r\n//     const renderRecentActivities = () => {\r\n//         if (previousOrders && previousOrders.length > 0) {\r\n//             return previousOrders.map((order, index) => (\r\n//                 <li key={index} className=\"mb-2 text-white\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\r\n//             ));\r\n//         } else {\r\n//             return <li className=\"mb-2 text-white\">No previous orders</li>;\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-green-500 to-teal-500\">\r\n//             <header className=\"flex justify-between items-center p-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\">\r\n//                 <div className=\"logo\">\r\n//                     <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\r\n//                 </div>\r\n//                 <div className=\"text-2xl cursor-pointer\" onClick={toggleMenu}>\r\n//                     &#9776;\r\n//                 </div>\r\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\r\n//             </header>\r\n//             <main className=\"flex-1 p-10\">\r\n//                 <div className=\"flex flex-col md:flex-row justify-between mb-10 space-y-6 md:space-y-0 md:space-x-6\">\r\n//                     <section className=\"bg-gradient-to-r from-gray-800 to-gray-600 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                         {profilePicture ? (\r\n//                             <img src={profilePicture} alt={`${name}'s profile`} className=\"w-30 h-30 rounded-full mb-5 shadow-md\" />\r\n//                         ) : (\r\n//                             <div className=\"w-30 h-30 rounded-full bg-gradient-to-r from-blue-600 to-blue-900 text-white flex items-center justify-center text-4xl font-bold mb-5\">\r\n//                                 {getInitials(name)}\r\n//                             </div>\r\n//                         )}\r\n//                         <h1 className=\"text-2xl text-white\">{`Hello, ${name}!`}</h1>\r\n//                     </section>\r\n//                     <section className=\"bg-gradient-to-r from-gray-800 to-gray-600 p-8 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex flex-col items-center\">\r\n//                         <p className=\"text-lg text-white\">Rewards Earned: <span className=\"font-bold text-yellow-400\">{rewards}</span></p>\r\n//                     </section>\r\n//                 </div>\r\n//                 <section className=\"bg-gradient-to-r from-blue-500 to-blue-700 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\r\n//                     <h2 className=\"text-xl text-white mb-4\">Pickup Scheduled</h2>\r\n//                     <div className=\"notification\">\r\n//                         {pickupScheduled ? (\r\n//                             <p className=\"text-white flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\r\n//                         ) : (\r\n//                             <p className=\"text-white flex items-center\"><i className=\"icon mr-2\">ðŸ“…</i> No pickup scheduled.</p>\r\n//                         )}\r\n//                         <div className=\"mt-4 w-full h-96 relative rounded-lg overflow-hidden\">\r\n//                             {userLocation && <GoogleMap center={userLocation} />}\r\n//                         </div>\r\n//                     </div>\r\n//                 </section>\r\n//                 <section className=\"bg-gradient-to-r from-blue-500 to-blue-700 p-8 rounded-lg shadow-lg mb-6 transition-transform transform hover:scale-105\">\r\n//                     <h2 className=\"text-xl text-white mb-4\">Recent Activities</h2>\r\n//                     <ul className=\"list-none p-0 m-0\">\r\n//                         {recentActivities && recentActivities.length > 0 ? (\r\n//                             recentActivities.map((activity, index) => (\r\n//                                 <li key={index} className=\"text-white mb-2 hover:text-green-300 transition-colors\">{activity}</li>\r\n//                             ))\r\n//                         ) : (\r\n//                             renderRecentActivities()\r\n//                         )}\r\n//                     </ul>\r\n//                 </section>\r\n//             </main>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n// src/components/Dashboard.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import DropdownMenu from './DropdownMenu';\r\n// import GoogleMap from './GoogleMap';\r\n// import Logo from '../assets/Frame 1 (1).png';\r\n\r\n// const Dashboard = ({ user }) => {\r\n//     const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders } = user;\r\n\r\n//     const [menuOpen, setMenuOpen] = useState(false);\r\n//     const [userLocation, setUserLocation] = useState(null);\r\n\r\n//     const toggleMenu = () => {\r\n//         setMenuOpen(!menuOpen);\r\n//     };\r\n\r\n//     const handleMenuItemClick = (menuItem) => {\r\n//         setMenuOpen(false); // Close menu after clicking\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         navigator.geolocation.getCurrentPosition(\r\n//             (position) => {\r\n//                 const { latitude, longitude } = position.coords;\r\n//                 setUserLocation({ lat: latitude, lng: longitude });\r\n//             },\r\n//             (error) => {\r\n//                 console.error('Error getting user location:', error);\r\n//             }\r\n//         );\r\n//     }, []);\r\n\r\n//     const getInitials = (name) => {\r\n//         const nameArray = name.split(' ');\r\n//         const initials = nameArray.map(part => part[0].toUpperCase()).join('');\r\n//         return initials;\r\n//     };\r\n\r\n//     const renderRecentActivities = () => {\r\n//         if (previousOrders && previousOrders.length > 0) {\r\n//             return previousOrders.map((order, index) => (\r\n//                 <li key={index} className=\"mb-2 text-dark\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\r\n//             ));\r\n//         } else {\r\n//             return <li className=\"mb-2 text-dark\">No previous orders</li>;\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"dashboard-container\">\r\n//             <header className=\"dashboard-header\">\r\n//                 <div className=\"logo\">\r\n//                     <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\r\n//                 </div>\r\n//                 <div className=\"menu-icon\" onClick={toggleMenu}>\r\n//                     &#9776;\r\n//                 </div>\r\n//                 <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\r\n//             </header>\r\n//             <main className=\"dashboard-main\">\r\n//                 <div className=\"info-container\">\r\n//                     <section className=\"profile-box light-section\">\r\n//                         {profilePicture ? (\r\n//                             <img src={profilePicture} alt={`${name}'s profile`} className=\"profile-picture\" />\r\n//                         ) : (\r\n//                             <div className=\"profile-initials\">\r\n//                                 {getInitials(name)}\r\n//                             </div>\r\n//                         )}\r\n//                         <h1>{`Hello, ${name}!`}</h1>\r\n//                     </section>\r\n//                     <section className=\"rewards-box dark-section\">\r\n//                         <p>Rewards Earned: <span className=\"rewards\">{rewards}</span></p>\r\n//                     </section>\r\n//                 </div>\r\n//                 <section className=\"pickup-section dark-section\">\r\n//                     <h2>Pickup Scheduled</h2>\r\n//                     <div className=\"notification\">\r\n//                         {pickupScheduled ? (\r\n//                             <p><i className=\"icon\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\r\n//                         ) : (\r\n//                             <p><i className=\"icon\">ðŸ“…</i> No pickup scheduled.</p>\r\n//                         )}\r\n//                         <div className=\"map-section\">\r\n//                             {userLocation && <GoogleMap center={userLocation} />}\r\n//                         </div>\r\n//                     </div>\r\n//                 </section>\r\n//                 <section className=\"recent-activities light-section\">\r\n//                     <h2>Recent Activities</h2>\r\n//                     <ul>\r\n//                         {recentActivities && recentActivities.length > 0 ? (\r\n//                             recentActivities.map((activity, index) => (\r\n//                                 <li key={index} className=\"activity-item\">{activity}</li>\r\n//                             ))\r\n//                         ) : (\r\n//                             renderRecentActivities()\r\n//                         )}\r\n//                     </ul>\r\n//                 </section>\r\n//             </main>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n// src/components/Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport DropdownMenu from './DropdownMenu';\r\nimport GoogleMap from './GoogleMap';\r\nimport Logo from '../assets/Frame 1 (1).png';\r\n\r\nconst Dashboard = ({ user }) => {\r\n    const { name, rewards, pickupScheduled, pickupDate, profilePicture, recentActivities, previousOrders } = user;\r\n\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [userLocation, setUserLocation] = useState(null);\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpen(!menuOpen);\r\n    };\r\n\r\n    const handleMenuItemClick = (menuItem) => {\r\n        setMenuOpen(false); // Close menu after clicking\r\n    };\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                setUserLocation({ lat: latitude, lng: longitude });\r\n            },\r\n            (error) => {\r\n                console.error('Error getting user location:', error);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    const getInitials = (name) => {\r\n        const nameArray = name.split(' ');\r\n        const initials = nameArray.map(part => part[0].toUpperCase()).join('');\r\n        return initials;\r\n    };\r\n\r\n    const renderRecentActivities = () => {\r\n        if (previousOrders && previousOrders.length > 0) {\r\n            return previousOrders.map((order, index) => (\r\n                <li key={index} className=\"mb-2\">{`Ordered: ${order.itemName} - ${order.date}`}</li>\r\n            ));\r\n        } else {\r\n            return <li className=\"mb-2\">No previous orders</li>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <header className=\"dashboard-header\">\r\n                <div className=\"logo\">\r\n                    <img src={Logo} alt=\"Logo\" className=\"w-24 h-auto\" />\r\n                </div>\r\n                <div className=\"menu-icon\" onClick={toggleMenu}>\r\n                    &#9776;\r\n                </div>\r\n                <DropdownMenu isOpen={menuOpen} onMenuItemClick={handleMenuItemClick} />\r\n            </header>\r\n            <main className=\"dashboard-main\">\r\n                <div className=\"dashboard-half dashboard-top\">\r\n                    <section className=\"profile-box hollow-effect\">\r\n                        {profilePicture ? (\r\n                            <img src={profilePicture} alt={`${name}'s profile`} className=\"profile-picture\" />\r\n                        ) : (\r\n                            <div className=\"profile-initials\">\r\n                                {getInitials(name)}\r\n                            </div>\r\n                        )}\r\n                        <h1>{`Hello, ${name}!`}</h1>\r\n                    </section>\r\n                    <section className=\"rewards-box hollow-effect\">\r\n                        <p>Rewards Earned: <span className=\"rewards\">{rewards}</span></p>\r\n                    </section>\r\n                </div>\r\n                <div className=\"dashboard-half dashboard-bottom\">\r\n                    <section className=\"pickup-section\">\r\n                        <h2>Pickup Scheduled</h2>\r\n                        <div className=\"notification\">\r\n                            {pickupScheduled ? (\r\n                                <p><i className=\"icon\">ðŸ“…</i> You have a pickup scheduled on {pickupDate}.</p>\r\n                            ) : (\r\n                                <p><i className=\"icon\">ðŸ“…</i> No pickup scheduled.</p>\r\n                            )}\r\n                            <div className=\"map-section\">\r\n                                {userLocation && <GoogleMap center={userLocation} />}\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"recent-activities\">\r\n                        <h2>Recent Activities</h2>\r\n                        <ul>\r\n                            {recentActivities && recentActivities.length > 0 ? (\r\n                                recentActivities.map((activity, index) => (\r\n                                    <li key={index} className=\"activity-item\">{activity}</li>\r\n                                ))\r\n                            ) : (\r\n                                renderRecentActivities()\r\n                            )}\r\n                        </ul>\r\n                    </section>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,IAAI,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAK,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
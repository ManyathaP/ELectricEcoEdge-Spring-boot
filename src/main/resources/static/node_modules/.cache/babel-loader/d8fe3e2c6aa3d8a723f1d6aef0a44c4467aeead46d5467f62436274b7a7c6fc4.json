{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\eclipse-workspace\\\\my-react-app E\\\\src\\\\components\\\\Rewards.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './Rewards.css';\n\n// const Rewards = ({ computerId, onClose }) => {\n//   const [selectedPoints, setSelectedPoints] = useState(300);\n\n//   const handlePointsChange = (e) => {\n//     setSelectedPoints(e.target.value);\n//   };\n\n//   const handleRewardSubmit = async () => {\n//     try {\n//       // Replace with your actual API endpoint and data structure\n//       await axios.post(`http://localhost:8090/api/v1/items/computers/${computerId}/rewards`, { points: selectedPoints });\n//       alert(`Rewards of ${selectedPoints} points given to computer ID ${computerId}`);\n//     } catch (error) {\n//       console.error('Error giving rewards:', error);\n//     }\n//     onClose(); // Close the dropdown after submitting\n//   };\n\n//   const generatePointsOptions = () => {\n//     const options = [];\n//     for (let i = 300; i <= 5000; i += 50) {\n//       options.push(<option key={i} value={i}>{i}</option>);\n//     }\n//     return options;\n//   };\n\n//   return (\n//     <div className=\"rewards-container\">\n//       <select className=\"rewards-select\" value={selectedPoints} onChange={handlePointsChange}>\n//         {generatePointsOptions()}\n//       </select>\n//       <button className=\"rewards-submit\" onClick={handleRewardSubmit}>Submit</button>\n//     </div>\n//   );\n// };\n\n// export default Rewards;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Rewards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rewards = ({\n  userId,\n  onClose\n}) => {\n  _s();\n  const [selectedPoints, setSelectedPoints] = useState(300);\n  const [totalPoints, setTotalPoints] = useState(0);\n  useEffect(() => {\n    const fetchTotalPoints = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8090/api/v1/rewards/${userId}`);\n        setTotalPoints(response.data.totalPoints);\n      } catch (error) {\n        console.error('Error fetching total points:', error);\n      }\n    };\n    fetchTotalPoints();\n  }, [userId]);\n  const handlePointsChange = e => {\n    setSelectedPoints(e.target.value);\n  };\n  const handleRewardSubmit = async () => {\n    try {\n      await axios.post(`http://localhost:8090/api/v1/rewards`, {\n        userId,\n        points: selectedPoints\n      });\n      alert(`Rewards of ${selectedPoints} points given to user ID ${userId}`);\n      setTotalPoints(totalPoints + parseInt(selectedPoints));\n    } catch (error) {\n      console.error('Error giving rewards:', error);\n    }\n    onClose(); // Close the dropdown after submitting\n  };\n  const generatePointsOptions = () => {\n    const options = [];\n    for (let i = 300; i <= 5000; i += 50) {\n      options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }, this));\n    }\n    return options;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rewards-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Total Points: \", totalPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"rewards-select\",\n      value: selectedPoints,\n      onChange: handlePointsChange,\n      children: generatePointsOptions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rewards-submit\",\n      onClick: handleRewardSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Rewards, \"FGceKJa1HaT+zCnvD7GihouJkoY=\");\n_c = Rewards;\nexport default Rewards;\nvar _c;\n$RefreshReg$(_c, \"Rewards\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Rewards","userId","onClose","_s","selectedPoints","setSelectedPoints","totalPoints","setTotalPoints","fetchTotalPoints","response","get","data","error","console","handlePointsChange","e","target","value","handleRewardSubmit","post","points","alert","parseInt","generatePointsOptions","options","i","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/eclipse-workspace/my-react-app E/src/components/Rewards.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './Rewards.css';\r\n\r\n// const Rewards = ({ computerId, onClose }) => {\r\n//   const [selectedPoints, setSelectedPoints] = useState(300);\r\n\r\n//   const handlePointsChange = (e) => {\r\n//     setSelectedPoints(e.target.value);\r\n//   };\r\n\r\n//   const handleRewardSubmit = async () => {\r\n//     try {\r\n//       // Replace with your actual API endpoint and data structure\r\n//       await axios.post(`http://localhost:8090/api/v1/items/computers/${computerId}/rewards`, { points: selectedPoints });\r\n//       alert(`Rewards of ${selectedPoints} points given to computer ID ${computerId}`);\r\n//     } catch (error) {\r\n//       console.error('Error giving rewards:', error);\r\n//     }\r\n//     onClose(); // Close the dropdown after submitting\r\n//   };\r\n\r\n//   const generatePointsOptions = () => {\r\n//     const options = [];\r\n//     for (let i = 300; i <= 5000; i += 50) {\r\n//       options.push(<option key={i} value={i}>{i}</option>);\r\n//     }\r\n//     return options;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"rewards-container\">\r\n//       <select className=\"rewards-select\" value={selectedPoints} onChange={handlePointsChange}>\r\n//         {generatePointsOptions()}\r\n//       </select>\r\n//       <button className=\"rewards-submit\" onClick={handleRewardSubmit}>Submit</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Rewards;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Rewards.css';\r\n\r\nconst Rewards = ({ userId, onClose }) => {\r\n  const [selectedPoints, setSelectedPoints] = useState(300);\r\n  const [totalPoints, setTotalPoints] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchTotalPoints = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8090/api/v1/rewards/${userId}`);\r\n        setTotalPoints(response.data.totalPoints);\r\n      } catch (error) {\r\n        console.error('Error fetching total points:', error);\r\n      }\r\n    };\r\n\r\n    fetchTotalPoints();\r\n  }, [userId]);\r\n\r\n  const handlePointsChange = (e) => {\r\n    setSelectedPoints(e.target.value);\r\n  };\r\n\r\n  const handleRewardSubmit = async () => {\r\n    try {\r\n      await axios.post(`http://localhost:8090/api/v1/rewards`, { userId, points: selectedPoints });\r\n      alert(`Rewards of ${selectedPoints} points given to user ID ${userId}`);\r\n      setTotalPoints(totalPoints + parseInt(selectedPoints));\r\n    } catch (error) {\r\n      console.error('Error giving rewards:', error);\r\n    }\r\n    onClose(); // Close the dropdown after submitting\r\n  };\r\n\r\n  const generatePointsOptions = () => {\r\n    const options = [];\r\n    for (let i = 300; i <= 5000; i += 50) {\r\n      options.push(<option key={i} value={i}>{i}</option>);\r\n    }\r\n    return options;\r\n  };\r\n\r\n  return (\r\n    <div className=\"rewards-container\">\r\n      <div>Total Points: {totalPoints}</div>\r\n      <select className=\"rewards-select\" value={selectedPoints} onChange={handlePointsChange}>\r\n        {generatePointsOptions()}\r\n      </select>\r\n      <button className=\"rewards-submit\" onClick={handleRewardSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rewards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
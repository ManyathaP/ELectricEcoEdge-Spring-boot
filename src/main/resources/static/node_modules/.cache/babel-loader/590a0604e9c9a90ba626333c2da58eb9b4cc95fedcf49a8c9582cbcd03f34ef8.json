{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TrackOrder=_ref=>{let{progress}=_ref;const steps=[33,66,100];return/*#__PURE__*/_jsxs(\"div\",{className:\"p-12 bg-gray-900 text-white rounded-lg shadow-lg max-w-3xl mx-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-8\",children:\"Track Your Order\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-700 rounded-full flex justify-between mb-8 h-12\",children:steps.map((step,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"w-12 h-12 rounded-full flex items-center justify-center \".concat(progress>=step?'bg-green-500':'bg-yellow-300'),children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white font-bold\",children:index+1})},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-700 rounded-full h-10\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-500 h-10 rounded-full transition-all duration-300\",style:{width:\"\".concat(progress,\"%\")}})})]});};const App=()=>{const[progress,setProgress]=useState(0);// Fetch progress data from an API or external source\nuseEffect(()=>{const fetchProgress=async()=>{try{// Replace this with your API call\nconst response=await fetch('https://api.example.com/progress');const data=await response.json();setProgress(data.progress);}catch(error){console.error('Failed to fetch progress data',error);}};fetchProgress();},[]);// Only run once when the component mounts\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col items-center justify-center min-h-screen bg-gray-900\",children:/*#__PURE__*/_jsx(TrackOrder,{progress:progress})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","TrackOrder","_ref","progress","steps","className","children","map","step","index","concat","style","width","App","setProgress","fetchProgress","response","fetch","data","json","error","console"],"sources":["C:/Users/HP/eclipse-workspace/my-react-app E/src/components/TrackOrder.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TrackOrder = ({ progress }) => {\r\n    const steps = [33, 66, 100];\r\n\r\n    return (\r\n        <div className=\"p-12 bg-gray-900 text-white rounded-lg shadow-lg max-w-3xl mx-auto\">\r\n            <h1 className=\"text-3xl font-bold mb-8\">Track Your Order</h1>\r\n            <div className=\"w-full bg-gray-700 rounded-full flex justify-between mb-8 h-12\">\r\n                {steps.map((step, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`w-12 h-12 rounded-full flex items-center justify-center ${\r\n                            progress >= step ? 'bg-green-500' : 'bg-yellow-300'\r\n                        }`}\r\n                    >\r\n                        <span className=\"text-white font-bold\">{index + 1}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"w-full bg-gray-700 rounded-full h-10\">\r\n                <div\r\n                    className=\"bg-green-500 h-10 rounded-full transition-all duration-300\"\r\n                    style={{ width: `${progress}%` }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst App = () => {\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    // Fetch progress data from an API or external source\r\n    useEffect(() => {\r\n        const fetchProgress = async () => {\r\n            try {\r\n                // Replace this with your API call\r\n                const response = await fetch('https://api.example.com/progress');\r\n                const data = await response.json();\r\n                setProgress(data.progress);\r\n            } catch (error) {\r\n                console.error('Failed to fetch progress data', error);\r\n            }\r\n        };\r\n\r\n        fetchProgress();\r\n    }, []); // Only run once when the component mounts\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900\">\r\n            <TrackOrder progress={progress} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC5B,KAAM,CAAAE,KAAK,CAAG,CAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAE3B,mBACIJ,KAAA,QAAKK,SAAS,CAAC,oEAAoE,CAAAC,QAAA,eAC/ER,IAAA,OAAIO,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,kBAAgB,CAAI,CAAC,cAC7DR,IAAA,QAAKO,SAAS,CAAC,gEAAgE,CAAAC,QAAA,CAC1EF,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACnBX,IAAA,QAEIO,SAAS,4DAAAK,MAAA,CACLP,QAAQ,EAAIK,IAAI,CAAG,cAAc,CAAG,eAAe,CACpD,CAAAF,QAAA,cAEHR,IAAA,SAAMO,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAEG,KAAK,CAAG,CAAC,CAAO,CAAC,EALpDA,KAMJ,CACR,CAAC,CACD,CAAC,cACNX,IAAA,QAAKO,SAAS,CAAC,sCAAsC,CAAAC,QAAA,cACjDR,IAAA,QACIO,SAAS,CAAC,4DAA4D,CACtEM,KAAK,CAAE,CAAEC,KAAK,IAAAF,MAAA,CAAKP,QAAQ,KAAI,CAAE,CACpC,CAAC,CACD,CAAC,EACL,CAAC,CAEd,CAAC,CAED,KAAM,CAAAU,GAAG,CAAGA,CAAA,GAAM,CACd,KAAM,CAACV,QAAQ,CAAEW,WAAW,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CAE3C;AACAC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAmB,aAAa,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACA;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,kCAAkC,CAAC,CAChE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCL,WAAW,CAACI,IAAI,CAACf,QAAQ,CAAC,CAC9B,CAAE,MAAOiB,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACzD,CACJ,CAAC,CAEDL,aAAa,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACIjB,IAAA,QAAKO,SAAS,CAAC,oEAAoE,CAAAC,QAAA,cAC/ER,IAAA,CAACG,UAAU,EAACE,QAAQ,CAAEA,QAAS,CAAE,CAAC,CACjC,CAAC,CAEd,CAAC,CAED,cAAe,CAAAU,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
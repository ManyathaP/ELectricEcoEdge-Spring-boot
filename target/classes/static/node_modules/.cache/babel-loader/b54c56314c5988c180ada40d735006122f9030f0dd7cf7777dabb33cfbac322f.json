{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\eclipse-workspace\\\\my-react-app E\\\\src\\\\components\\\\TrackOrder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackOrder = ({\n  progress\n}) => {\n  const steps = [33, 66, 100]; // Define the progress at which each step is accomplished\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-12 bg-gray-900 text-white rounded-lg shadow-lg max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-8\",\n      children: \"Track Your Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-700 rounded-full flex justify-between mb-8 h-12\",\n      children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-12 h-12 rounded-full flex items-center justify-center ${progress >= step ? 'bg-green-500' : 'bg-yellow-300'}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white font-bold\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-700 rounded-full h-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-500 h-10 rounded-full transition-all duration-300\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = TrackOrder;\nconst App = () => {\n  _s();\n  const [progress, setProgress] = useState(0); // Initialize progress state to 0\n\n  // Simulate receiving progress data\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setProgress(prevProgress => {\n        if (prevProgress >= 100) {\n          return 0; // Reset progress to 0 if it's 100 or more\n        } else {\n          return prevProgress + 10; // Otherwise, increase progress by 10\n        }\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(TrackOrder, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"ZVQpwjU6Dz5R8VBOzPsnxGRmMVo=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"TrackOrder\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TrackOrder","progress","steps","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","step","index","style","width","_c","App","_s","setProgress","interval","setInterval","prevProgress","clearInterval","_c2","$RefreshReg$"],"sources":["C:/Users/HP/eclipse-workspace/my-react-app E/src/components/TrackOrder.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TrackOrder = ({ progress }) => {\r\n    const steps = [33, 66, 100]; // Define the progress at which each step is accomplished\r\n\r\n    return (\r\n        <div className=\"p-12 bg-gray-900 text-white rounded-lg shadow-lg max-w-3xl mx-auto\">\r\n            <h1 className=\"text-3xl font-bold mb-8\">Track Your Order</h1>\r\n            <div className=\"w-full bg-gray-700 rounded-full flex justify-between mb-8 h-12\">\r\n                {steps.map((step, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`w-12 h-12 rounded-full flex items-center justify-center ${\r\n                            progress >= step ? 'bg-green-500' : 'bg-yellow-300'\r\n                        }`}\r\n                    >\r\n                        <span className=\"text-white font-bold\">{index + 1}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"w-full bg-gray-700 rounded-full h-10\">\r\n                <div\r\n                    className=\"bg-green-500 h-10 rounded-full transition-all duration-300\"\r\n                    style={{ width: `${progress}%` }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst App = () => {\r\n    const [progress, setProgress] = useState(0); // Initialize progress state to 0\r\n\r\n    // Simulate receiving progress data\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setProgress((prevProgress) => {\r\n                if (prevProgress >= 100) {\r\n                    return 0; // Reset progress to 0 if it's 100 or more\r\n                } else {\r\n                    return prevProgress + 10; // Otherwise, increase progress by 10\r\n                }\r\n            });\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900\">\r\n            <TrackOrder progress={progress} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACjC,MAAMC,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;;EAE7B,oBACIH,OAAA;IAAKI,SAAS,EAAC,oEAAoE;IAAAC,QAAA,gBAC/EL,OAAA;MAAII,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7DT,OAAA;MAAKI,SAAS,EAAC,gEAAgE;MAAAC,QAAA,EAC1EF,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBZ,OAAA;QAEII,SAAS,EAAE,2DACPF,QAAQ,IAAIS,IAAI,GAAG,cAAc,GAAG,eAAe,EACpD;QAAAN,QAAA,eAEHL,OAAA;UAAMI,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAAEO,KAAK,GAAG;QAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GALpDG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMT,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNT,OAAA;MAAKI,SAAS,EAAC,sCAAsC;MAAAC,QAAA,eACjDL,OAAA;QACII,SAAS,EAAC,4DAA4D;QACtES,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAGZ,QAAQ;QAAI;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACM,EAAA,GA1BId,UAAU;AA4BhB,MAAMe,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACf,QAAQ,EAAEgB,WAAW,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMqB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BF,WAAW,CAAEG,YAAY,IAAK;QAC1B,IAAIA,YAAY,IAAI,GAAG,EAAE;UACrB,OAAO,CAAC,CAAC,CAAC;QACd,CAAC,MAAM;UACH,OAAOA,YAAY,GAAG,EAAE,CAAC,CAAC;QAC9B;MACJ,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACInB,OAAA;IAAKI,SAAS,EAAC,oEAAoE;IAAAC,QAAA,eAC/EL,OAAA,CAACC,UAAU;MAACC,QAAQ,EAAEA;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEd,CAAC;AAACQ,EAAA,CAtBID,GAAG;AAAAO,GAAA,GAAHP,GAAG;AAwBT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}